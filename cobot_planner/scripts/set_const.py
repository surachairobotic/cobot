import sympy as sp
import numpy as np
import math
import time
import pickle
import lib_sympy as lib_sp
import lib_equation as lib_eq

g = 9.8

L = [[0.0,0.0,0.184]
,[0.0,0.0,0.0]
,[0.27203,0,0.0]
,[0.0,0.141,0.0]
,[0.0,0.0,0.109]
,[0.0,0.111,0.0]
,[0.0,0.0,0.05]
]
'''
L_org = [0,0,0.184]
L = [[0,0,0]
,[0.27203,0,0]
,[0,0.141,0]
,[0,0,0.109]
,[0,0.111,0]
,[0,0,0]
,[0,0,0]
]
'''


'''
COM = [#[0,0,0]
[0,0,0.2]
,[0,0,0.1]
,[0,0,0.12]
,[0,0,0.05]
,[0,0,0.03]
,[0,0,0.04]
]

M = [0,3,2,2.2,1.5,1.2,0.8,0.7]
I = [np.diag([2,2,1])
, np.diag([1,1,2])
, np.diag([1,2,1])
, np.diag([1,2,2])
, np.diag([2,1,1])
, np.diag([1,2,1])
, np.diag([2,2,1])
]
'''
M = [0.95363, 0.91416, 1.53769, 0.16959000000000002, 0.71842, 0.014]
COM = [[-0.00284, -0.008220000000000002, 0.0012, 1.0], [0.14556, -0.02322, 0.00551, 1.0], [-0.0016899999999999999, 0.04343, -0.010230000000000001, 1.0], [0.0, 0.00536, 0.05461, 1.0], [-3e-05, 0.03277, -0.00538, 1.0], [-1e-05, 0.0, 0.00704, 1.0]]
#I = [[[0.132530668, 0.002230762, -0.000326473], [0.002230762, 0.038764478, -0.0009444620000000001], [-0.000326473, -0.0009444620000000001, 0.13311026799999998]], [[0.191710524, -0.30636858199999994, 0.133907096], [-0.30636858199999994, 2.382556166, 0.0014175389999999998], [0.133907096, 0.0014175389999999998, 2.385579838]], [[0.389376689, -0.011254494, 0.0026510740000000002], [-0.011254494, 0.099712162, -0.068326125], [0.0026510740000000002, -0.068326125, 0.322811008]], [[0.063546784, -0.0, -0.0], [-0.0, 0.05415326899999999, 0.005360706], [-0.0, 0.005360706, 0.012623114]], [[0.102093766, -8.0209e-05, 1.3168e-05], [-8.0209e-05, 0.024950659, -0.012666862], [1.3168e-05, -0.012666862, 0.08645460999999999]], [[0.00024241899999999998, 0.0, 2.3999999999999997e-08], [0.0, 0.00024225100000000002, 0.0], [2.3999999999999997e-08, 0.0, 6.8202e-05]]]
I = [[[0.00132530668, 2.230762e-05, -3.2647300000000003e-06], [2.230762e-05, 0.00038764478000000006, -9.44462e-06], [-3.2647300000000003e-06, -9.44462e-06, 0.0013311026800000001]], [[0.00191710524, -0.00306368582, 0.00133907096], [-0.00306368582, 0.02382556166, 1.417539e-05], [0.00133907096, 1.417539e-05, 0.02385579838]], [[0.0038937668900000002, -0.00011254494000000001, 2.6510740000000003e-05], [-0.00011254494000000001, 0.00099712162, -0.0006832612500000001], [2.6510740000000003e-05, -0.0006832612500000001, 0.0032281100800000003]], [[0.00063546784, -0.0, -0.0], [-0.0, 0.00054153269, 5.360706e-05], [-0.0, 5.360706e-05, 0.00012623114000000001]], [[0.0010209376600000002, -8.020900000000001e-07, 1.3168000000000003e-07], [-8.020900000000001e-07, 0.00024950659, -0.00012666862], [1.3168000000000003e-07, -0.00012666862, 0.0008645461]], [[2.42419e-06, 0.0, 2.4e-10], [0.0, 2.4225100000000004e-06, 0.0], [2.4e-10, 0.0, 6.8202e-07]]]

def run(joint_num,b_load=False):
  global L,COM,M,I,g

  if b_load:
    t_start = time.time()
    lib_eq.create_symbol(joint_num)
    print('Create symbols : %f s' % (time.time()-t_start))

    t_start = time.time()
    lib_eq.load('eq.pkl')
    print('Load data : %f s' % (time.time()-t_start))

  t_start = time.time()
  lib_eq.set_const(L,COM,M,I,g)
  print('Set constant : %f s' % (time.time()-t_start))

  t_start = time.time()
  lib_eq.save('eq_const.pkl')
  print('Save eq : %f s' % (time.time()-t_start))


if __name__ == "__main__":
  run(6,True)
