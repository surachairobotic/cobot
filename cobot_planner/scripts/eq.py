import numpy as np
import math

def get_vars(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [np.array([
[c0, -s0, 0, 0],
[s0,  c0, 0, 0],
[ 0,   0, 1, 0],
[ 0,   0, 0, 1]]), np.array([
[c0*c1, -s0, c0*s1,   0],
[c1*s0,  c0, s0*s1,   0],
[  -s1,   0,    c1, 0.4],
[    0,   0,     0,   1]]), np.array([
[c0*c1*c2 - c0*s1*s2, -s0, c0*c1*s2 + c0*c2*s1,    0.3*c0*s1],
[c1*c2*s0 - s0*s1*s2,  c0, c1*s0*s2 + c2*s0*s1,    0.3*s0*s1],
[     -c1*s2 - c2*s1,   0,       c1*c2 - s1*s2, 0.3*c1 + 0.4],
[                  0,   0,                   0,            1]]), np.array([
[c0*c1*c2 - c0*s1*s2, -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),  c3*(c0*c1*s2 + c0*c2*s1) + s0*s3, 0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1],
[c1*c2*s0 - s0*s1*s2,  c0*c3 + s3*(c1*s0*s2 + c2*s0*s1), -c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), 0.2*c1*s0*s2 + 0.2*c2*s0*s1 + 0.3*s0*s1],
[     -c1*s2 - c2*s1,                s3*(c1*c2 - s1*s2),                c3*(c1*c2 - s1*s2),    0.2*c1*c2 + 0.3*c1 - 0.2*s1*s2 + 0.4],
[                  0,                                 0,                                 0,                                       1]]), np.array([
[ c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),  c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2),  0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.1*s0*s3],
[c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)),  c0*c3 + s3*(c1*s0*s2 + c2*s0*s1), c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2), -0.1*c0*s3 + 0.2*c1*s0*s2 + 0.2*c2*s0*s1 + 0.1*c3*(c1*s0*s2 + c2*s0*s1) + 0.3*s0*s1],
[                     -c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1),                s3*(c1*c2 - s1*s2),                       c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1),                       0.2*c1*c2 + 0.3*c1 + 0.1*c3*(c1*c2 - s1*s2) - 0.2*s1*s2 + 0.4],
[                                                                0,                                 0,                                                                 0,                                                                                   1]]), np.array([
[ c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), c5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) + s5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)), c5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)) - s5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)),   0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.05*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + 0.1*s0*s3 + 0.05*s4*(c0*c1*c2 - c0*s1*s2)],
[c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), c5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) + s5*(c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2)), c5*(c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2)) - s5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)), -0.1*c0*s3 + 0.2*c1*s0*s2 + 0.2*c2*s0*s1 + 0.1*c3*(c1*s0*s2 + c2*s0*s1) + 0.05*c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + 0.3*s0*s1 + 0.05*s4*(c1*c2*s0 - s0*s1*s2)],
[                     -c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1),                                       c5*s3*(c1*c2 - s1*s2) + s5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1)),                                       c5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1)) - s3*s5*(c1*c2 - s1*s2),                                             0.2*c1*c2 + 0.3*c1 + 0.05*c3*c4*(c1*c2 - s1*s2) + 0.1*c3*(c1*c2 - s1*s2) - 0.2*s1*s2 + 0.05*s4*(-c1*s2 - c2*s1) + 0.4],
[                                                                0,                                                                                                              0,                                                                                                              0,                                                                                                                                                                 1]])], [[np.array([
[-s0, -c0, 0, 0],
[ c0, -s0, 0, 0],
[  0,   0, 0, 0],
[  0,   0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[-c1*s0, -c0, -s0*s1, 0],
[ c0*c1, -s0,  c0*s1, 0],
[     0,   0,      0, 0],
[     0,   0,      0, 0]]), np.array([
[-c0*s1, 0, c0*c1, 0],
[-s0*s1, 0, c1*s0, 0],
[   -c1, 0,   -s1, 0],
[     0, 0,     0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[-c1*c2*s0 + s0*s1*s2, -c0, -c1*s0*s2 - c2*s0*s1, -0.3*s0*s1],
[ c0*c1*c2 - c0*s1*s2, -s0,  c0*c1*s2 + c0*c2*s1,  0.3*c0*s1],
[                   0,   0,                    0,          0],
[                   0,   0,                    0,          0]]), np.array([
[-c0*c1*s2 - c0*c2*s1, 0, c0*c1*c2 - c0*s1*s2, 0.3*c0*c1],
[-c1*s0*s2 - c2*s0*s1, 0, c1*c2*s0 - s0*s1*s2, 0.3*c1*s0],
[      -c1*c2 + s1*s2, 0,      -c1*s2 - c2*s1,   -0.3*s1],
[                   0, 0,                   0,         0]]), np.array([
[-c0*c1*s2 - c0*c2*s1, 0, c0*c1*c2 - c0*s1*s2, 0],
[-c1*s0*s2 - c2*s0*s1, 0, c1*c2*s0 - s0*s1*s2, 0],
[      -c1*c2 + s1*s2, 0,      -c1*s2 - c2*s1, 0],
[                   0, 0,                   0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[-c1*c2*s0 + s0*s1*s2, -c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1), c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 - 0.3*s0*s1],
[ c0*c1*c2 - c0*s1*s2,  -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),  c3*(c0*c1*s2 + c0*c2*s1) + s0*s3,  0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1],
[                   0,                                  0,                                 0,                                        0],
[                   0,                                  0,                                 0,                                        0]]), np.array([
[-c0*c1*s2 - c0*c2*s1, s3*(c0*c1*c2 - c0*s1*s2), c3*(c0*c1*c2 - c0*s1*s2), 0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2],
[-c1*s0*s2 - c2*s0*s1, s3*(c1*c2*s0 - s0*s1*s2), c3*(c1*c2*s0 - s0*s1*s2), 0.2*c1*c2*s0 + 0.3*c1*s0 - 0.2*s0*s1*s2],
[      -c1*c2 + s1*s2,      s3*(-c1*s2 - c2*s1),      c3*(-c1*s2 - c2*s1),         -0.2*c1*s2 - 0.2*c2*s1 - 0.3*s1],
[                   0,                        0,                        0,                                       0]]), np.array([
[-c0*c1*s2 - c0*c2*s1, s3*(c0*c1*c2 - c0*s1*s2), c3*(c0*c1*c2 - c0*s1*s2), 0.2*c0*c1*c2 - 0.2*c0*s1*s2],
[-c1*s0*s2 - c2*s0*s1, s3*(c1*c2*s0 - s0*s1*s2), c3*(c1*c2*s0 - s0*s1*s2), 0.2*c1*c2*s0 - 0.2*s0*s1*s2],
[      -c1*c2 + s1*s2,      s3*(-c1*s2 - c2*s1),      c3*(-c1*s2 - c2*s1),      -0.2*c1*s2 - 0.2*c2*s1],
[                   0,                        0,                        0,                           0]]), np.array([
[0,  c3*(c0*c1*s2 + c0*c2*s1) + s0*s3,  c3*s0 - s3*(c0*c1*s2 + c0*c2*s1), 0],
[0, -c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), -c0*c3 - s3*(c1*s0*s2 + c2*s0*s1), 0],
[0,                c3*(c1*c2 - s1*s2),               -s3*(c1*c2 - s1*s2), 0],
[0,                                 0,                                 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[c4*(-c1*c2*s0 + s0*s1*s2) - s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), -c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1), c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2), 0.1*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) - 0.3*s0*s1],
[  c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),  -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),   c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2),  0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.1*s0*s3],
[                                                                 0,                                  0,                                                                  0,                                                                                   0],
[                                                                 0,                                  0,                                                                  0,                                                                                   0]]), np.array([
[-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1), s3*(c0*c1*c2 - c0*s1*s2), c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1), 0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.1*c3*(c0*c1*c2 - c0*s1*s2)],
[-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1), s3*(c1*c2*s0 - s0*s1*s2), c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1), 0.2*c1*c2*s0 + 0.3*c1*s0 + 0.1*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2],
[           -c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2),      s3*(-c1*s2 - c2*s1),            c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2),              -0.2*c1*s2 - 0.2*c2*s1 + 0.1*c3*(-c1*s2 - c2*s1) - 0.3*s1],
[                                                       0,                        0,                                                       0,                                                                      0]]), np.array([
[-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1), s3*(c0*c1*c2 - c0*s1*s2), c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1), 0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.1*c3*(c0*c1*c2 - c0*s1*s2)],
[-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1), s3*(c1*c2*s0 - s0*s1*s2), c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1), 0.2*c1*c2*s0 + 0.1*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2],
[           -c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2),      s3*(-c1*s2 - c2*s1),            c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2),           -0.2*c1*s2 - 0.2*c2*s1 + 0.1*c3*(-c1*s2 - c2*s1)],
[                                                       0,                        0,                                                       0,                                                          0]]), np.array([
[ -s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),  c3*(c0*c1*s2 + c0*c2*s1) + s0*s3,  c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),  0.1*c3*s0 - 0.1*s3*(c0*c1*s2 + c0*c2*s1)],
[-s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), -c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), c4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), -0.1*c0*c3 - 0.1*s3*(c1*s0*s2 + c2*s0*s1)],
[                  s3*s4*(c1*c2 - s1*s2),                c3*(c1*c2 - s1*s2),                 -c4*s3*(c1*c2 - s1*s2),                   -0.1*s3*(c1*c2 - s1*s2)],
[                                      0,                                 0,                                      0,                                         0]]), np.array([
[ -c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - s4*(c0*c1*c2 - c0*s1*s2), 0,  c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), 0],
[-c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - s4*(c1*c2*s0 - s0*s1*s2), 0, c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), 0],
[                      -c3*c4*(c1*c2 - s1*s2) - s4*(-c1*s2 - c2*s1), 0,                      -c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1), 0],
[                                                                 0, 0,                                                                 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[c4*(-c1*c2*s0 + s0*s1*s2) - s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), c5*(-c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1)) + s5*(c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2)), c5*(c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2)) - s5*(-c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1)), 0.1*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) - 0.3*s0*s1 + 0.05*s4*(-c1*c2*s0 + s0*s1*s2)],
[  c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),    c5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) + s5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)),    c5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)) - s5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)),    0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.05*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + 0.1*s0*s3 + 0.05*s4*(c0*c1*c2 - c0*s1*s2)],
[                                                                 0,                                                                                                                 0,                                                                                                                 0,                                                                                                                                                                  0],
[                                                                 0,                                                                                                                 0,                                                                                                                 0,                                                                                                                                                                  0]]), np.array([
[-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1), c5*s3*(c0*c1*c2 - c0*s1*s2) + s5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)), c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - s3*s5*(c0*c1*c2 - c0*s1*s2), 0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1)],
[-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1), c5*s3*(c1*c2*s0 - s0*s1*s2) + s5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)), c5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)) - s3*s5*(c1*c2*s0 - s0*s1*s2), 0.2*c1*c2*s0 + 0.3*c1*s0 + 0.05*c3*c4*(c1*c2*s0 - s0*s1*s2) + 0.1*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2 + 0.05*s4*(-c1*s0*s2 - c2*s0*s1)],
[           -c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2),                 c5*s3*(-c1*s2 - c2*s1) + s5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)),                 c5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)) - s3*s5*(-c1*s2 - c2*s1),                         -0.2*c1*s2 - 0.2*c2*s1 + 0.05*c3*c4*(-c1*s2 - c2*s1) + 0.1*c3*(-c1*s2 - c2*s1) - 0.3*s1 + 0.05*s4*(-c1*c2 + s1*s2)],
[                                                       0,                                                                                          0,                                                                                          0,                                                                                                                                          0]]), np.array([
[-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1), c5*s3*(c0*c1*c2 - c0*s1*s2) + s5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)), c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - s3*s5*(c0*c1*c2 - c0*s1*s2), 0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1)],
[-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1), c5*s3*(c1*c2*s0 - s0*s1*s2) + s5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)), c5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)) - s3*s5*(c1*c2*s0 - s0*s1*s2), 0.2*c1*c2*s0 + 0.05*c3*c4*(c1*c2*s0 - s0*s1*s2) + 0.1*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2 + 0.05*s4*(-c1*s0*s2 - c2*s0*s1)],
[           -c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2),                 c5*s3*(-c1*s2 - c2*s1) + s5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)),                 c5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)) - s3*s5*(-c1*s2 - c2*s1),                      -0.2*c1*s2 - 0.2*c2*s1 + 0.05*c3*c4*(-c1*s2 - c2*s1) + 0.1*c3*(-c1*s2 - c2*s1) + 0.05*s4*(-c1*c2 + s1*s2)],
[                                                       0,                                                                                          0,                                                                                          0,                                                                                                                              0]]), np.array([
[ -s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),   c4*s5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) + c5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),   c4*c5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - s5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),   0.1*c3*s0 + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1)],
[-s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), c4*s5*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) + c5*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), c4*c5*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - s5*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), -0.1*c0*c3 + 0.05*c4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.1*s3*(c1*s0*s2 + c2*s0*s1)],
[                  s3*s4*(c1*c2 - s1*s2),                                   c3*c5*(c1*c2 - s1*s2) - c4*s3*s5*(c1*c2 - s1*s2),                                  -c3*s5*(c1*c2 - s1*s2) - c4*c5*s3*(c1*c2 - s1*s2),                                    -0.05*c4*s3*(c1*c2 - s1*s2) - 0.1*s3*(c1*c2 - s1*s2)],
[                                      0,                                                                                  0,                                                                                  0,                                                                                       0]]), np.array([
[ -c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - s4*(c0*c1*c2 - c0*s1*s2),  s5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)),  c5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)),  0.05*c4*(c0*c1*c2 - c0*s1*s2) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)],
[-c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - s4*(c1*c2*s0 - s0*s1*s2), s5*(c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))), c5*(c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))), 0.05*c4*(c1*c2*s0 - s0*s1*s2) - 0.05*s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))],
[                      -c3*c4*(c1*c2 - s1*s2) - s4*(-c1*s2 - c2*s1),                      s5*(-c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1)),                      c5*(-c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1)),                      -0.05*c3*s4*(c1*c2 - s1*s2) + 0.05*c4*(-c1*s2 - c2*s1)],
[                                                                 0,                                                                      0,                                                                      0,                                                                           0]]), np.array([
[0, c5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)) - s5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), -c5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - s5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)), 0],
[0, c5*(c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2)) - s5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)), -c5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - s5*(c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2)), 0],
[0,                                       c5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1)) - s3*s5*(c1*c2 - s1*s2),                                       -c5*s3*(c1*c2 - s1*s2) - s5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1)), 0],
[0,                                                                                                              0,                                                                                                               0, 0]])]], [], [], [np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[1, 0, 0, 0, 0, 0]]), np.array([
[0, -s0, 0, 0, 0, 0],
[0,  c0, 0, 0, 0, 0],
[1,   0, 0, 0, 0, 0]]), np.array([
[0, -s0, -s0, 0, 0, 0],
[0,  c0,  c0, 0, 0, 0],
[1,   0,   0, 0, 0, 0]]), np.array([
[0, -s0, -s0, c0*c1*c2 - c0*s1*s2, 0, 0],
[0,  c0,  c0, c1*c2*s0 - s0*s1*s2, 0, 0],
[1,   0,   0,      -c1*s2 - c2*s1, 0, 0]]), np.array([
[0, -s0, -s0, c0*c1*c2 - c0*s1*s2, -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1), 0],
[0,  c0,  c0, c1*c2*s0 - s0*s1*s2,  c0*c3 + s3*(c1*s0*s2 + c2*s0*s1), 0],
[1,   0,   0,      -c1*s2 - c2*s1,                s3*(c1*c2 - s1*s2), 0]]), np.array([
[0, -s0, -s0, c0*c1*c2 - c0*s1*s2, -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),  c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)],
[0,  c0,  c0, c1*c2*s0 - s0*s1*s2,  c0*c3 + s3*(c1*s0*s2 + c2*s0*s1), c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))],
[1,   0,   0,      -c1*s2 - c2*s1,                s3*(c1*c2 - s1*s2),                      -c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1)]])], [[np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, -c0, 0, 0, 0, 0],
[0, -s0, 0, 0, 0, 0],
[0,   0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, -c0, -c0, 0, 0, 0],
[0, -s0, -s0, 0, 0, 0],
[0,   0,   0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, -c0, -c0, -c1*c2*s0 + s0*s1*s2, 0, 0],
[0, -s0, -s0,  c0*c1*c2 - c0*s1*s2, 0, 0],
[0,   0,   0,                    0, 0, 0]]), np.array([
[0, 0, 0, -c0*c1*s2 - c0*c2*s1, 0, 0],
[0, 0, 0, -c1*s0*s2 - c2*s0*s1, 0, 0],
[0, 0, 0,       -c1*c2 + s1*s2, 0, 0]]), np.array([
[0, 0, 0, -c0*c1*s2 - c0*c2*s1, 0, 0],
[0, 0, 0, -c1*s0*s2 - c2*s0*s1, 0, 0],
[0, 0, 0,       -c1*c2 + s1*s2, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, -c0, -c0, -c1*c2*s0 + s0*s1*s2, -c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1), 0],
[0, -s0, -s0,  c0*c1*c2 - c0*s1*s2,  -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1), 0],
[0,   0,   0,                    0,                                  0, 0]]), np.array([
[0, 0, 0, -c0*c1*s2 - c0*c2*s1, s3*(c0*c1*c2 - c0*s1*s2), 0],
[0, 0, 0, -c1*s0*s2 - c2*s0*s1, s3*(c1*c2*s0 - s0*s1*s2), 0],
[0, 0, 0,       -c1*c2 + s1*s2,      s3*(-c1*s2 - c2*s1), 0]]), np.array([
[0, 0, 0, -c0*c1*s2 - c0*c2*s1, s3*(c0*c1*c2 - c0*s1*s2), 0],
[0, 0, 0, -c1*s0*s2 - c2*s0*s1, s3*(c1*c2*s0 - s0*s1*s2), 0],
[0, 0, 0,       -c1*c2 + s1*s2,      s3*(-c1*s2 - c2*s1), 0]]), np.array([
[0, 0, 0, 0,  c3*(c0*c1*s2 + c0*c2*s1) + s0*s3, 0],
[0, 0, 0, 0, -c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), 0],
[0, 0, 0, 0,                c3*(c1*c2 - s1*s2), 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, -c0, -c0, -c1*c2*s0 + s0*s1*s2, -c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1), c4*(-c1*c2*s0 + s0*s1*s2) - s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1))],
[0, -s0, -s0,  c0*c1*c2 - c0*s1*s2,  -c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),   c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)],
[0,   0,   0,                    0,                                  0,                                                                  0]]), np.array([
[0, 0, 0, -c0*c1*s2 - c0*c2*s1, s3*(c0*c1*c2 - c0*s1*s2), -c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1)],
[0, 0, 0, -c1*s0*s2 - c2*s0*s1, s3*(c1*c2*s0 - s0*s1*s2), -c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1)],
[0, 0, 0,       -c1*c2 + s1*s2,      s3*(-c1*s2 - c2*s1),            -c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2)]]), np.array([
[0, 0, 0, -c0*c1*s2 - c0*c2*s1, s3*(c0*c1*c2 - c0*s1*s2), -c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1)],
[0, 0, 0, -c1*s0*s2 - c2*s0*s1, s3*(c1*c2*s0 - s0*s1*s2), -c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1)],
[0, 0, 0,       -c1*c2 + s1*s2,      s3*(-c1*s2 - c2*s1),            -c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2)]]), np.array([
[0, 0, 0, 0,  c3*(c0*c1*s2 + c0*c2*s1) + s0*s3,  -s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1))],
[0, 0, 0, 0, -c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), -s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1))],
[0, 0, 0, 0,                c3*(c1*c2 - s1*s2),                   s3*s4*(c1*c2 - s1*s2)]]), np.array([
[0, 0, 0, 0, 0,  -c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - s4*(c0*c1*c2 - c0*s1*s2)],
[0, 0, 0, 0, 0, -c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - s4*(c1*c2*s0 - s0*s1*s2)],
[0, 0, 0, 0, 0,                       -c3*c4*(c1*c2 - s1*s2) - s4*(-c1*s2 - c2*s1)]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])]], [np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[-0.2*s0*s1, 0.2*c0*c1, 0, 0, 0, 0],
[ 0.2*c0*s1, 0.2*c1*s0, 0, 0, 0, 0],
[         0,   -0.2*s1, 0, 0, 0, 0],
[         0,         0, 0, 0, 0, 0]]), np.array([
[-0.1*c1*s0*s2 - 0.1*c2*s0*s1 - 0.3*s0*s1, 0.1*c0*c1*c2 + 0.3*c0*c1 - 0.1*c0*s1*s2, 0.1*c0*c1*c2 - 0.1*c0*s1*s2, 0, 0, 0],
[ 0.1*c0*c1*s2 + 0.1*c0*c2*s1 + 0.3*c0*s1, 0.1*c1*c2*s0 + 0.3*c1*s0 - 0.1*s0*s1*s2, 0.1*c1*c2*s0 - 0.1*s0*s1*s2, 0, 0, 0],
[                                       0,         -0.1*c1*s2 - 0.1*c2*s1 - 0.3*s1,      -0.1*c1*s2 - 0.1*c2*s1, 0, 0, 0],
[                                       0,                                       0,                           0, 0, 0, 0]]), np.array([
[0.12*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.12*c3*(-c1*s0*s2 - c2*s0*s1) - 0.3*s0*s1, 0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.12*c3*(c0*c1*c2 - c0*s1*s2), 0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.12*c3*(c0*c1*c2 - c0*s1*s2),  0.12*c3*s0 - 0.12*s3*(c0*c1*s2 + c0*c2*s1), 0, 0],
[ 0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.12*c3*(c0*c1*s2 + c0*c2*s1) + 0.12*s0*s3, 0.2*c1*c2*s0 + 0.3*c1*s0 + 0.12*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2, 0.2*c1*c2*s0 + 0.12*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2, -0.12*c0*c3 - 0.12*s3*(c1*s0*s2 + c2*s0*s1), 0, 0],
[                                                                                    0,              -0.2*c1*s2 - 0.2*c2*s1 + 0.12*c3*(-c1*s2 - c2*s1) - 0.3*s1,           -0.2*c1*s2 - 0.2*c2*s1 + 0.12*c3*(-c1*s2 - c2*s1),                    -0.12*s3*(c1*c2 - s1*s2), 0, 0],
[                                                                                    0,                                                                       0,                                                           0,                                           0, 0, 0]]), np.array([
[0.1*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) - 0.3*s0*s1 + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), 0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1), 0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1),   0.1*c3*s0 + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1),  0.05*c4*(c0*c1*c2 - c0*s1*s2) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), 0],
[   0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.05*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + 0.1*s0*s3 + 0.05*s4*(c0*c1*c2 - c0*s1*s2), 0.2*c1*c2*s0 + 0.3*c1*s0 + 0.05*c3*c4*(c1*c2*s0 - s0*s1*s2) + 0.1*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2 + 0.05*s4*(-c1*s0*s2 - c2*s0*s1), 0.2*c1*c2*s0 + 0.05*c3*c4*(c1*c2*s0 - s0*s1*s2) + 0.1*c3*(c1*c2*s0 - s0*s1*s2) - 0.2*s0*s1*s2 + 0.05*s4*(-c1*s0*s2 - c2*s0*s1), -0.1*c0*c3 + 0.05*c4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.1*s3*(c1*s0*s2 + c2*s0*s1), 0.05*c4*(c1*c2*s0 - s0*s1*s2) - 0.05*s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), 0],
[                                                                                                                                                                 0,                         -0.2*c1*s2 - 0.2*c2*s1 + 0.05*c3*c4*(-c1*s2 - c2*s1) + 0.1*c3*(-c1*s2 - c2*s1) - 0.3*s1 + 0.05*s4*(-c1*c2 + s1*s2),                      -0.2*c1*s2 - 0.2*c2*s1 + 0.05*c3*c4*(-c1*s2 - c2*s1) + 0.1*c3*(-c1*s2 - c2*s1) + 0.05*s4*(-c1*c2 + s1*s2),                                    -0.05*c4*s3*(c1*c2 - s1*s2) - 0.1*s3*(c1*c2 - s1*s2),                      -0.05*c3*s4*(c1*c2 - s1*s2) + 0.05*c4*(-c1*s2 - c2*s1), 0],
np.array([
[0.1*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + 0.03*c5*(c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2)) - 0.3*s0*s1 + 0.05*s4*(-c1*c2*s0 + s0*s1*s2) - 0.03*s5*(-c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1)), 0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - 0.03*s3*s5*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1), 0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - 0.03*s3*s5*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1),     0.1*c3*s0 + 0.03*c4*c5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1) - 0.03*s5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),   0.05*c4*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), -0.03*c5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.03*s5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2))],
[      0.2*c0*c1*s2 + 0.2*c0*c2*s1 + 0.3*c0*s1 + 0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.05*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + 0.03*c5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)) + 0.1*s0*s3 + 0.05*s4*(c0*c1*c2 - c0*s1*s2) - 0.03*s5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), 0.2*c1*c2*s0 + 0.3*c1*s0 + 0.05*c3*c4*(c1*c2*s0 - s0*s1*s2) + 0.1*c3*(c1*c2*s0 - s0*s1*s2) + 0.03*c5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)) - 0.2*s0*s1*s2 - 0.03*s3*s5*(c1*c2*s0 - s0*s1*s2) + 0.05*s4*(-c1*s0*s2 - c2*s0*s1), 0.2*c1*c2*s0 + 0.05*c3*c4*(c1*c2*s0 - s0*s1*s2) + 0.1*c3*(c1*c2*s0 - s0*s1*s2) + 0.03*c5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)) - 0.2*s0*s1*s2 - 0.03*s3*s5*(c1*c2*s0 - s0*s1*s2) + 0.05*s4*(-c1*s0*s2 - c2*s0*s1), -0.1*c0*c3 + 0.03*c4*c5*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) + 0.05*c4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.1*s3*(c1*s0*s2 + c2*s0*s1) - 0.03*s5*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), 0.05*c4*(c1*c2*s0 - s0*s1*s2) + 0.03*c5*(c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))) - 0.05*s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), -0.03*c5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 0.03*s5*(c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2))],
[                                                                                                                                                                                                                                                                                               0,                                         -0.2*c1*s2 - 0.2*c2*s1 + 0.05*c3*c4*(-c1*s2 - c2*s1) + 0.1*c3*(-c1*s2 - c2*s1) + 0.03*c5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)) - 0.3*s1 - 0.03*s3*s5*(-c1*s2 - c2*s1) + 0.05*s4*(-c1*c2 + s1*s2),                                      -0.2*c1*s2 - 0.2*c2*s1 + 0.05*c3*c4*(-c1*s2 - c2*s1) + 0.1*c3*(-c1*s2 - c2*s1) + 0.03*c5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)) - 0.03*s3*s5*(-c1*s2 - c2*s1) + 0.05*s4*(-c1*c2 + s1*s2),                                                                      -0.03*c3*s5*(c1*c2 - s1*s2) - 0.03*c4*c5*s3*(c1*c2 - s1*s2) - 0.05*c4*s3*(c1*c2 - s1*s2) - 0.1*s3*(c1*c2 - s1*s2),                                           -0.05*c3*s4*(c1*c2 - s1*s2) + 0.05*c4*(-c1*s2 - c2*s1) + 0.03*c5*(-c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1)),                                       -0.03*c5*s3*(c1*c2 - s1*s2) - 0.03*s5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1))],
np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.2*c0*s1, -0.2*c1*s0, 0, 0, 0, 0],
[-0.2*s0*s1,  0.2*c0*c1, 0, 0, 0, 0],
[         0,          0, 0, 0, 0, 0],
[         0,          0, 0, 0, 0, 0]]), np.array([
[-0.2*c1*s0, -0.2*c0*s1, 0, 0, 0, 0],
[ 0.2*c0*c1, -0.2*s0*s1, 0, 0, 0, 0],
[         0,    -0.2*c1, 0, 0, 0, 0],
[         0,          0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.1*c0*c1*s2 - 0.1*c0*c2*s1 - 0.3*c0*s1, -0.1*c1*c2*s0 - 0.3*c1*s0 + 0.1*s0*s1*s2, -0.1*c1*c2*s0 + 0.1*s0*s1*s2, 0, 0, 0],
[-0.1*c1*s0*s2 - 0.1*c2*s0*s1 - 0.3*s0*s1,  0.1*c0*c1*c2 + 0.3*c0*c1 - 0.1*c0*s1*s2,  0.1*c0*c1*c2 - 0.1*c0*s1*s2, 0, 0, 0],
[                                       0,                                        0,                            0, 0, 0, 0],
[                                       0,                                        0,                            0, 0, 0, 0]]), np.array([
[-0.1*c1*c2*s0 - 0.3*c1*s0 + 0.1*s0*s1*s2, -0.1*c0*c1*s2 - 0.1*c0*c2*s1 - 0.3*c0*s1, -0.1*c0*c1*s2 - 0.1*c0*c2*s1, 0, 0, 0],
[ 0.1*c0*c1*c2 + 0.3*c0*c1 - 0.1*c0*s1*s2, -0.1*c1*s0*s2 - 0.1*c2*s0*s1 - 0.3*s0*s1, -0.1*c1*s0*s2 - 0.1*c2*s0*s1, 0, 0, 0],
[                                       0,          -0.1*c1*c2 - 0.3*c1 + 0.1*s1*s2,       -0.1*c1*c2 + 0.1*s1*s2, 0, 0, 0],
[                                       0,                                        0,                            0, 0, 0, 0]]), np.array([
[-0.1*c1*c2*s0 + 0.1*s0*s1*s2, -0.1*c0*c1*s2 - 0.1*c0*c2*s1, -0.1*c0*c1*s2 - 0.1*c0*c2*s1, 0, 0, 0],
[ 0.1*c0*c1*c2 - 0.1*c0*s1*s2, -0.1*c1*s0*s2 - 0.1*c2*s0*s1, -0.1*c1*s0*s2 - 0.1*c2*s0*s1, 0, 0, 0],
[                           0,       -0.1*c1*c2 + 0.1*s1*s2,       -0.1*c1*c2 + 0.1*s1*s2, 0, 0, 0],
[                           0,                            0,                            0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.2*c0*c1*s2 - 0.2*c0*c2*s1 - 0.3*c0*s1 + 0.12*c3*(-c0*c1*s2 - c0*c2*s1) - 0.12*s0*s3, -0.2*c1*c2*s0 - 0.3*c1*s0 + 0.12*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2, -0.2*c1*c2*s0 + 0.12*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2, 0.12*c0*c3 - 0.12*s3*(-c1*s0*s2 - c2*s0*s1), 0, 0],
[ 0.12*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.12*c3*(-c1*s0*s2 - c2*s0*s1) - 0.3*s0*s1,   0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.12*c3*(c0*c1*c2 - c0*s1*s2),   0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.12*c3*(c0*c1*c2 - c0*s1*s2),  0.12*c3*s0 - 0.12*s3*(c0*c1*s2 + c0*c2*s1), 0, 0],
[                                                                                     0,                                                                         0,                                                             0,                                           0, 0, 0],
[                                                                                     0,                                                                         0,                                                             0,                                           0, 0, 0]]), np.array([
[-0.2*c1*c2*s0 - 0.3*c1*s0 + 0.12*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2, -0.2*c0*c1*s2 - 0.2*c0*c2*s1 - 0.3*c0*s1 + 0.12*c3*(-c0*c1*s2 - c0*c2*s1), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.12*c3*(-c0*c1*s2 - c0*c2*s1), -0.12*s3*(c0*c1*c2 - c0*s1*s2), 0, 0],
[  0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.12*c3*(c0*c1*c2 - c0*s1*s2), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.12*c3*(-c1*s0*s2 - c2*s0*s1) - 0.3*s0*s1, -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.12*c3*(-c1*s0*s2 - c2*s0*s1), -0.12*s3*(c1*c2*s0 - s0*s1*s2), 0, 0],
[                                                                        0,                -0.2*c1*c2 - 0.3*c1 + 0.12*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2,             -0.2*c1*c2 + 0.12*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2,      -0.12*s3*(-c1*s2 - c2*s1), 0, 0],
[                                                                        0,                                                                         0,                                                             0,                              0, 0, 0]]), np.array([
[-0.2*c1*c2*s0 + 0.12*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2, -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.12*c3*(-c0*c1*s2 - c0*c2*s1), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.12*c3*(-c0*c1*s2 - c0*c2*s1), -0.12*s3*(c0*c1*c2 - c0*s1*s2), 0, 0],
[  0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.12*c3*(c0*c1*c2 - c0*s1*s2), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.12*c3*(-c1*s0*s2 - c2*s0*s1), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.12*c3*(-c1*s0*s2 - c2*s0*s1), -0.12*s3*(c1*c2*s0 - s0*s1*s2), 0, 0],
[                                                            0,             -0.2*c1*c2 + 0.12*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2,             -0.2*c1*c2 + 0.12*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2,      -0.12*s3*(-c1*s2 - c2*s1), 0, 0],
[                                                            0,                                                             0,                                                             0,                              0, 0, 0]]), np.array([
[0.12*c0*c3 - 0.12*s3*(-c1*s0*s2 - c2*s0*s1), -0.12*s3*(c0*c1*c2 - c0*s1*s2), -0.12*s3*(c0*c1*c2 - c0*s1*s2), -0.12*c3*(c0*c1*s2 + c0*c2*s1) - 0.12*s0*s3, 0, 0],
[ 0.12*c3*s0 - 0.12*s3*(c0*c1*s2 + c0*c2*s1), -0.12*s3*(c1*c2*s0 - s0*s1*s2), -0.12*s3*(c1*c2*s0 - s0*s1*s2),  0.12*c0*s3 - 0.12*c3*(c1*s0*s2 + c2*s0*s1), 0, 0],
[                                          0,      -0.12*s3*(-c1*s2 - c2*s1),      -0.12*s3*(-c1*s2 - c2*s1),                    -0.12*c3*(c1*c2 - s1*s2), 0, 0],
[                                          0,                              0,                              0,                                           0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.2*c0*c1*s2 - 0.2*c0*c2*s1 - 0.3*c0*s1 + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.05*c4*(c3*(-c0*c1*s2 - c0*c2*s1) - s0*s3) - 0.1*s0*s3 + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.2*c1*c2*s0 - 0.3*c1*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2 + 0.05*s4*(c1*s0*s2 + c2*s0*s1), -0.2*c1*c2*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2 + 0.05*s4*(c1*s0*s2 + c2*s0*s1), 0.1*c0*c3 + 0.05*c4*(c0*c3 - s3*(-c1*s0*s2 - c2*s0*s1)) - 0.1*s3*(-c1*s0*s2 - c2*s0*s1), 0.05*c4*(-c1*c2*s0 + s0*s1*s2) - 0.05*s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), 0],
[ 0.1*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) - 0.3*s0*s1 + 0.05*s4*(-c1*c2*s0 + s0*s1*s2),   0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1),   0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1),   0.1*c3*s0 + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1),   0.05*c4*(c0*c1*c2 - c0*s1*s2) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), 0],

np.array([
[-0.2*c1*c2*s0 - 0.3*c1*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2 + 0.05*s4*(c1*s0*s2 + c2*s0*s1), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 - 0.3*c0*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1), 0],
[  0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) - 0.3*s0*s1 + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1), 0],
[                                                                                                                                           0,                             -0.2*c1*c2 - 0.3*c1 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2 + 0.05*s4*(c1*s2 + c2*s1),                          -0.2*c1*c2 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2 + 0.05*s4*(c1*s2 + c2*s1),           -0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),            -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2), 0],
np.array([
[-0.2*c1*c2*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.2*s0*s1*s2 + 0.05*s4*(c1*s0*s2 + c2*s0*s1), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1), 0],
[  0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1), 0],
[                                                                                                                               0,                          -0.2*c1*c2 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2 + 0.05*s4*(c1*s2 + c2*s1),                          -0.2*c1*c2 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.2*s1*s2 + 0.05*s4*(c1*s2 + c2*s1),           -0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),            -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2), 0],
np.array([
[0.1*c0*c3 + 0.05*c4*(c0*c3 - s3*(-c1*s0*s2 - c2*s0*s1)) - 0.1*s3*(-c1*s0*s2 - c2*s0*s1), -0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.05*c4*(-c3*(c0*c1*s2 + c0*c2*s1) - s0*s3) - 0.1*s0*s3,  -0.05*s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)), 0],
[  0.1*c3*s0 + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1), -0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2), -0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2),   0.1*c0*s3 - 0.1*c3*(c1*s0*s2 + c2*s0*s1) + 0.05*c4*(c0*s3 - c3*(c1*s0*s2 + c2*s0*s1)), -0.05*s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), 0],
[                                                                                      0,           -0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),           -0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),                                    -0.05*c3*c4*(c1*c2 - s1*s2) - 0.1*c3*(c1*c2 - s1*s2),                   0.05*s3*s4*(c1*c2 - s1*s2), 0],
[                                                                                      0,                                                                0,                                                                0,                                                                                       0,                                            0, 0]]), np.array([
[0.05*c4*(-c1*c2*s0 + s0*s1*s2) - 0.05*s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1),  -0.05*s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),  -0.05*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 0.05*s4*(c0*c1*c2 - c0*s1*s2), 0],
[  0.05*c4*(c0*c1*c2 - c0*s1*s2) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1), -0.05*s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), -0.05*c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 0.05*s4*(c1*c2*s0 - s0*s1*s2), 0],
[                                                                           0,            -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2),            -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2),                   0.05*s3*s4*(c1*c2 - s1*s2),                       -0.05*c3*c4*(c1*c2 - s1*s2) - 0.05*s4*(-c1*s2 - c2*s1), 0],
[                                                                           0,                                                                  0,                                                                  0,                                            0,                                                                            0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.2*c0*c1*s2 - 0.2*c0*c2*s1 - 0.3*c0*s1 + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.05*c4*(c3*(-c0*c1*s2 - c0*c2*s1) - s0*s3) + 0.03*c5*(c4*(c3*(-c0*c1*s2 - c0*c2*s1) - s0*s3) + s4*(-c0*c1*c2 + c0*s1*s2)) - 0.1*s0*s3 + 0.05*s4*(-c0*c1*c2 + c0*s1*s2) - 0.03*s5*(c3*s0 + s3*(-c0*c1*s2 - c0*c2*s1)), -0.2*c1*c2*s0 - 0.3*c1*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.03*c5*(c3*c4*(-c1*c2*s0 + s0*s1*s2) + s4*(c1*s0*s2 + c2*s0*s1)) + 0.2*s0*s1*s2 - 0.03*s3*s5*(-c1*c2*s0 + s0*s1*s2) + 0.05*s4*(c1*s0*s2 + c2*s0*s1), -0.2*c1*c2*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.03*c5*(c3*c4*(-c1*c2*s0 + s0*s1*s2) + s4*(c1*s0*s2 + c2*s0*s1)) + 0.2*s0*s1*s2 - 0.03*s3*s5*(-c1*c2*s0 + s0*s1*s2) + 0.05*s4*(c1*s0*s2 + c2*s0*s1), 0.1*c0*c3 + 0.03*c4*c5*(c0*c3 - s3*(-c1*s0*s2 - c2*s0*s1)) + 0.05*c4*(c0*c3 - s3*(-c1*s0*s2 - c2*s0*s1)) - 0.1*s3*(-c1*s0*s2 - c2*s0*s1) - 0.03*s5*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), 0.05*c4*(-c1*c2*s0 + s0*s1*s2) + 0.03*c5*(c4*(-c1*c2*s0 + s0*s1*s2) - s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1))) - 0.05*s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), -0.03*c5*(-c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1)) - 0.03*s5*(c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2))],
[0.1*c0*s3 - 0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.05*c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + 0.03*c5*(c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2)) - 0.3*s0*s1 + 0.05*s4*(-c1*c2*s0 + s0*s1*s2) - 0.03*s5*(-c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1)),    0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - 0.03*s3*s5*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1),    0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - 0.03*s3*s5*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1),     0.1*c3*s0 + 0.03*c4*c5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1) - 0.03*s5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),     0.05*c4*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),    -0.03*c5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.03*s5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2))],

np.array([
[-0.2*c1*c2*s0 - 0.3*c1*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.03*c5*(c3*c4*(-c1*c2*s0 + s0*s1*s2) + s4*(c1*s0*s2 + c2*s0*s1)) + 0.2*s0*s1*s2 - 0.03*s3*s5*(-c1*c2*s0 + s0*s1*s2) + 0.05*s4*(c1*s0*s2 + c2*s0*s1), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 - 0.3*c0*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(c3*c4*(-c0*c1*s2 - c0*c2*s1) + s4*(-c0*c1*c2 + c0*s1*s2)) - 0.03*s3*s5*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(c3*c4*(-c0*c1*s2 - c0*c2*s1) + s4*(-c0*c1*c2 + c0*s1*s2)) - 0.03*s3*s5*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.03*c3*s5*(c0*c1*c2 - c0*s1*s2) - 0.03*c4*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1)), -0.03*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.03*s5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1))],
[   0.2*c0*c1*c2 + 0.3*c0*c1 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - 0.03*s3*s5*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(c3*c4*(-c1*s0*s2 - c2*s0*s1) + s4*(-c1*c2*s0 + s0*s1*s2)) - 0.3*s0*s1 - 0.03*s3*s5*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(c3*c4*(-c1*s0*s2 - c2*s0*s1) + s4*(-c1*c2*s0 + s0*s1*s2)) - 0.03*s3*s5*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.03*c3*s5*(c1*c2*s0 - s0*s1*s2) - 0.03*c4*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1)), -0.03*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.03*s5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1))],
[                                                                                                                                                                                                                                                   0,                                                -0.2*c1*c2 - 0.3*c1 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.03*c5*(c3*c4*(-c1*c2 + s1*s2) + s4*(c1*s2 + c2*s1)) + 0.2*s1*s2 - 0.03*s3*s5*(-c1*c2 + s1*s2) + 0.05*s4*(c1*s2 + c2*s1),                                             -0.2*c1*c2 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.03*c5*(c3*c4*(-c1*c2 + s1*s2) + s4*(c1*s2 + c2*s1)) + 0.2*s1*s2 - 0.03*s3*s5*(-c1*c2 + s1*s2) + 0.05*s4*(c1*s2 + c2*s1),                     -0.03*c3*s5*(-c1*s2 - c2*s1) - 0.03*c4*c5*s3*(-c1*s2 - c2*s1) - 0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),                       -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2) + 0.03*c5*(-c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2)),                 -0.03*c5*s3*(-c1*s2 - c2*s1) - 0.03*s5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2))],
np.array([
[-0.2*c1*c2*s0 + 0.05*c3*c4*(-c1*c2*s0 + s0*s1*s2) + 0.1*c3*(-c1*c2*s0 + s0*s1*s2) + 0.03*c5*(c3*c4*(-c1*c2*s0 + s0*s1*s2) + s4*(c1*s0*s2 + c2*s0*s1)) + 0.2*s0*s1*s2 - 0.03*s3*s5*(-c1*c2*s0 + s0*s1*s2) + 0.05*s4*(c1*s0*s2 + c2*s0*s1), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(c3*c4*(-c0*c1*s2 - c0*c2*s1) + s4*(-c0*c1*c2 + c0*s1*s2)) - 0.03*s3*s5*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.2*c0*c1*s2 - 0.2*c0*c2*s1 + 0.05*c3*c4*(-c0*c1*s2 - c0*c2*s1) + 0.1*c3*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(c3*c4*(-c0*c1*s2 - c0*c2*s1) + s4*(-c0*c1*c2 + c0*s1*s2)) - 0.03*s3*s5*(-c0*c1*s2 - c0*c2*s1) + 0.05*s4*(-c0*c1*c2 + c0*s1*s2), -0.03*c3*s5*(c0*c1*c2 - c0*s1*s2) - 0.03*c4*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1)), -0.03*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.03*s5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1))],
[   0.2*c0*c1*c2 - 0.2*c0*s1*s2 + 0.05*c3*c4*(c0*c1*c2 - c0*s1*s2) + 0.1*c3*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)) - 0.03*s3*s5*(c0*c1*c2 - c0*s1*s2) + 0.05*s4*(-c0*c1*s2 - c0*c2*s1), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(c3*c4*(-c1*s0*s2 - c2*s0*s1) + s4*(-c1*c2*s0 + s0*s1*s2)) - 0.03*s3*s5*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.2*c1*s0*s2 - 0.2*c2*s0*s1 + 0.05*c3*c4*(-c1*s0*s2 - c2*s0*s1) + 0.1*c3*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(c3*c4*(-c1*s0*s2 - c2*s0*s1) + s4*(-c1*c2*s0 + s0*s1*s2)) - 0.03*s3*s5*(-c1*s0*s2 - c2*s0*s1) + 0.05*s4*(-c1*c2*s0 + s0*s1*s2), -0.03*c3*s5*(c1*c2*s0 - s0*s1*s2) - 0.03*c4*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1)), -0.03*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.03*s5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1))],
[                                                                                                                                                                                                                                       0,                                             -0.2*c1*c2 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.03*c5*(c3*c4*(-c1*c2 + s1*s2) + s4*(c1*s2 + c2*s1)) + 0.2*s1*s2 - 0.03*s3*s5*(-c1*c2 + s1*s2) + 0.05*s4*(c1*s2 + c2*s1),                                             -0.2*c1*c2 + 0.05*c3*c4*(-c1*c2 + s1*s2) + 0.1*c3*(-c1*c2 + s1*s2) + 0.03*c5*(c3*c4*(-c1*c2 + s1*s2) + s4*(c1*s2 + c2*s1)) + 0.2*s1*s2 - 0.03*s3*s5*(-c1*c2 + s1*s2) + 0.05*s4*(c1*s2 + c2*s1),                     -0.03*c3*s5*(-c1*s2 - c2*s1) - 0.03*c4*c5*s3*(-c1*s2 - c2*s1) - 0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),                       -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2) + 0.03*c5*(-c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2)),                 -0.03*c5*s3*(-c1*s2 - c2*s1) - 0.03*s5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2))],
np.array([
[0.1*c0*c3 + 0.03*c4*c5*(c0*c3 - s3*(-c1*s0*s2 - c2*s0*s1)) + 0.05*c4*(c0*c3 - s3*(-c1*s0*s2 - c2*s0*s1)) - 0.1*s3*(-c1*s0*s2 - c2*s0*s1) - 0.03*s5*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), -0.03*c3*s5*(c0*c1*c2 - c0*s1*s2) - 0.03*c4*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.03*c3*s5*(c0*c1*c2 - c0*s1*s2) - 0.03*c4*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.05*c4*s3*(c0*c1*c2 - c0*s1*s2) - 0.1*s3*(c0*c1*c2 - c0*s1*s2), -0.1*c3*(c0*c1*s2 + c0*c2*s1) + 0.03*c4*c5*(-c3*(c0*c1*s2 + c0*c2*s1) - s0*s3) + 0.05*c4*(-c3*(c0*c1*s2 + c0*c2*s1) - s0*s3) - 0.1*s0*s3 - 0.03*s5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),   -0.03*c5*s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.05*s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),   -0.03*c4*s5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.03*c5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)],
[    0.1*c3*s0 + 0.03*c4*c5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) + 0.05*c4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.1*s3*(c0*c1*s2 + c0*c2*s1) - 0.03*s5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), -0.03*c3*s5*(c1*c2*s0 - s0*s1*s2) - 0.03*c4*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2), -0.03*c3*s5*(c1*c2*s0 - s0*s1*s2) - 0.03*c4*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.05*c4*s3*(c1*c2*s0 - s0*s1*s2) - 0.1*s3*(c1*c2*s0 - s0*s1*s2),   0.1*c0*s3 - 0.1*c3*(c1*s0*s2 + c2*s0*s1) + 0.03*c4*c5*(c0*s3 - c3*(c1*s0*s2 + c2*s0*s1)) + 0.05*c4*(c0*s3 - c3*(c1*s0*s2 + c2*s0*s1)) - 0.03*s5*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), -0.03*c5*s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.05*s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), -0.03*c4*s5*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.03*c5*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))],
[                                                                                                                                                                                     0,                     -0.03*c3*s5*(-c1*s2 - c2*s1) - 0.03*c4*c5*s3*(-c1*s2 - c2*s1) - 0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),                     -0.03*c3*s5*(-c1*s2 - c2*s1) - 0.03*c4*c5*s3*(-c1*s2 - c2*s1) - 0.05*c4*s3*(-c1*s2 - c2*s1) - 0.1*s3*(-c1*s2 - c2*s1),                                                                     -0.03*c3*c4*c5*(c1*c2 - s1*s2) - 0.05*c3*c4*(c1*c2 - s1*s2) - 0.1*c3*(c1*c2 - s1*s2) + 0.03*s3*s5*(c1*c2 - s1*s2),                                    0.03*c5*s3*s4*(c1*c2 - s1*s2) + 0.05*s3*s4*(c1*c2 - s1*s2),                                   -0.03*c3*c5*(c1*c2 - s1*s2) + 0.03*c4*s3*s5*(c1*c2 - s1*s2)],
np.array([
[0.05*c4*(-c1*c2*s0 + s0*s1*s2) + 0.03*c5*(c4*(-c1*c2*s0 + s0*s1*s2) - s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1))) - 0.05*s4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1)), -0.05*c3*s4*(c0*c1*c2 - c0*s1*s2) + 0.05*c4*(-c0*c1*s2 - c0*c2*s1) + 0.03*c5*(-c3*s4*(c0*c1*c2 - c0*s1*s2) + c4*(-c0*c1*s2 - c0*c2*s1)),   -0.03*c5*s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.05*s4*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)),   -0.05*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + 0.03*c5*(-c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - s4*(c0*c1*c2 - c0*s1*s2)) - 0.05*s4*(c0*c1*c2 - c0*s1*s2),  -0.03*s5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3))],
[    0.05*c4*(c0*c1*c2 - c0*s1*s2) + 0.03*c5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) - 0.05*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1)), -0.05*c3*s4*(c1*c2*s0 - s0*s1*s2) + 0.05*c4*(-c1*s0*s2 - c2*s0*s1) + 0.03*c5*(-c3*s4*(c1*c2*s0 - s0*s1*s2) + c4*(-c1*s0*s2 - c2*s0*s1)), -0.03*c5*s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.05*s4*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)), -0.05*c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + 0.03*c5*(-c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - s4*(c1*c2*s0 - s0*s1*s2)) - 0.05*s4*(c1*c2*s0 - s0*s1*s2), -0.03*s5*(c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)))],
[                                                                                                                                                          0,                       -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2) + 0.03*c5*(-c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2)),                       -0.05*c3*s4*(-c1*s2 - c2*s1) + 0.05*c4*(-c1*c2 + s1*s2) + 0.03*c5*(-c3*s4*(-c1*s2 - c2*s1) + c4*(-c1*c2 + s1*s2)),                                    0.03*c5*s3*s4*(c1*c2 - s1*s2) + 0.05*s3*s4*(c1*c2 - s1*s2),                                             -0.05*c3*c4*(c1*c2 - s1*s2) + 0.03*c5*(-c3*c4*(c1*c2 - s1*s2) - s4*(-c1*s2 - c2*s1)) - 0.05*s4*(-c1*s2 - c2*s1),                      -0.03*s5*(-c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1))],
np.array([
[-0.03*c5*(-c0*c3 + s3*(-c1*s0*s2 - c2*s0*s1)) - 0.03*s5*(c4*(c0*s3 + c3*(-c1*s0*s2 - c2*s0*s1)) + s4*(-c1*c2*s0 + s0*s1*s2)), -0.03*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.03*s5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)), -0.03*c5*s3*(c0*c1*c2 - c0*s1*s2) - 0.03*s5*(c3*c4*(c0*c1*c2 - c0*s1*s2) + s4*(-c0*c1*s2 - c0*c2*s1)),   -0.03*c4*s5*(c3*s0 - s3*(c0*c1*s2 + c0*c2*s1)) - 0.03*c5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),  -0.03*s5*(c4*(c0*c1*c2 - c0*s1*s2) - s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)), -0.03*c5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)) + 0.03*s5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1))],
[   -0.03*c5*(-c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.03*s5*(c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*(c0*c1*c2 - c0*s1*s2)), -0.03*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.03*s5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)), -0.03*c5*s3*(c1*c2*s0 - s0*s1*s2) - 0.03*s5*(c3*c4*(c1*c2*s0 - s0*s1*s2) + s4*(-c1*s0*s2 - c2*s0*s1)), -0.03*c4*s5*(-c0*c3 - s3*(c1*s0*s2 + c2*s0*s1)) - 0.03*c5*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), -0.03*s5*(c4*(c1*c2*s0 - s0*s1*s2) - s4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))), -0.03*c5*(c4*(-c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*(c1*c2*s0 - s0*s1*s2)) + 0.03*s5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1))],
[                                                                                                                           0,                 -0.03*c5*s3*(-c1*s2 - c2*s1) - 0.03*s5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)),                 -0.03*c5*s3*(-c1*s2 - c2*s1) - 0.03*s5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)),                                   -0.03*c3*c5*(c1*c2 - s1*s2) + 0.03*c4*s3*s5*(c1*c2 - s1*s2),                      -0.03*s5*(-c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1)),                                       -0.03*c5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1)) + 0.03*s3*s5*(c1*c2 - s1*s2)],
np.array([[0], [-0.7*c1*s2 - 0.7*c2*s1 + 0.1*c3*c4*(-c1*s2 - c2*s1) + 0.32*c3*(-c1*s2 - c2*s1) + 0.03*c5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)) - 1.4*s1 - 0.03*s3*s5*(-c1*s2 - c2*s1) + 0.1*s4*(-c1*c2 + s1*s2)], [-0.7*c1*s2 - 0.7*c2*s1 + 0.1*c3*c4*(-c1*s2 - c2*s1) + 0.32*c3*(-c1*s2 - c2*s1) + 0.03*c5*(c3*c4*(-c1*s2 - c2*s1) + s4*(-c1*c2 + s1*s2)) - 0.03*s3*s5*(-c1*s2 - c2*s1) + 0.1*s4*(-c1*c2 + s1*s2)], [-0.03*c3*s5*(c1*c2 - s1*s2) - 0.03*c4*c5*s3*(c1*c2 - s1*s2) - 0.1*c4*s3*(c1*c2 - s1*s2) - 0.32*s3*(c1*c2 - s1*s2)], [-0.1*c3*s4*(c1*c2 - s1*s2) + 0.1*c4*(-c1*s2 - c2*s1) + 0.03*c5*(-c3*s4*(c1*c2 - s1*s2) + c4*(-c1*s2 - c2*s1))], [-0.03*c5*s3*(c1*c2 - s1*s2) - 0.03*s5*(c3*c4*(c1*c2 - s1*s2) + s4*(-c1*s2 - c2*s1))]]), 