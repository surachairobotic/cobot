import numpy as np
import math

def get_R(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [np.array([
[c0, -1.0*s0,   0,   0.0],
[s0,      c0,   0,   0.0],
[ 0,       0, 1.0, 0.184],
[ 0,       0,   0,   1.0]]), np.array([
[c0*s1,   c0*c1, -1.0*s0,     0],
[s0*s1,   c1*s0,      c0,     0],
[   c1, -1.0*s1,       0, 0.184],
[    0,       0,       0,   1.0]]), np.array([
[c0*c1*s2 + c0*c2*s1, c0*c1*c2 - 1.0*c0*s1*s2, -1.0*s0,      0.27203*c0*s1],
[c1*s0*s2 + c2*s0*s1, c1*c2*s0 - 1.0*s0*s1*s2,      c0,      0.27203*s0*s1],
[  c1*c2 - 1.0*s1*s2,  -1.0*c1*s2 - 1.0*c2*s1,       0, 0.27203*c1 + 0.184],
[                  0,                       0,       0,                1.0]]), np.array([
[     c3*(c0*c1*s2 + c0*c2*s1) + s0*s3,      c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1), c0*c1*c2 - 1.0*c0*s1*s2, 0.141*c0*c1*c2 - 0.141*c0*s1*s2 + 0.27203*c0*s1],
[-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), -1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1), c1*c2*s0 - 1.0*s0*s1*s2, 0.141*c1*c2*s0 - 0.141*s0*s1*s2 + 0.27203*s0*s1],
[               c3*(c1*c2 - 1.0*s1*s2),               -1.0*s3*(c1*c2 - 1.0*s1*s2),  -1.0*c1*s2 - 1.0*c2*s1, -0.141*c1*s2 + 0.27203*c1 - 0.141*c2*s1 + 0.184],
[                                    0,                                         0,                       0,                                             1.0]]), np.array([
[     c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),      -1.0*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1), 0.25*c0*c1*c2 - 0.25*c0*s1*s2 + 0.27203*c0*s1],
[c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), -1.0*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2),      c0*c3 + s3*(c1*s0*s2 + c2*s0*s1), 0.25*c1*c2*s0 - 0.25*s0*s1*s2 + 0.27203*s0*s1],
[                 -1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1),                   -1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1),                s3*(c1*c2 - 1.0*s1*s2), -0.25*c1*s2 + 0.27203*c1 - 0.25*c2*s1 + 0.184],
[                                                                            0,                                                                                  0,                                     0,                                           1.0]]), np.array([
[c5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) - 1.0*s5*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), -1.0*c5*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 1.0*s5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)),      -1.0*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2),      0.25*c0*c1*c2 - 0.25*c0*s1*s2 + 0.27203*c0*s1 - 0.111*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 0.111*s4*(c0*c1*c2 - 1.0*c0*s1*s2)],
[c5*(c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))) - 1.0*s5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)), -1.0*c5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s5*(c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))), -1.0*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 0.25*c1*c2*s0 - 0.111*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 0.25*s0*s1*s2 + 0.27203*s0*s1 - 0.111*s4*(c1*c2*s0 - 1.0*s0*s1*s2)],
[                             c5*(-1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1)) - 1.0*s3*s5*(c1*c2 - 1.0*s1*s2),                              -1.0*c5*s3*(c1*c2 - 1.0*s1*s2) - 1.0*s5*(-1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1)),                   -1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1),                   -0.25*c1*s2 + 0.27203*c1 - 0.25*c2*s1 - 0.111*c3*c4*(c1*c2 - 1.0*s1*s2) - 0.111*s4*(-1.0*c1*s2 - 1.0*c2*s1) + 0.184],
[                                                                                                                             0,                                                                                                                                   0,                                                                                  0,                                                                                                                                   1.0]])]
def get_dR_dq(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [[np.array([
[-1.0*s0, -1.0*c0, 0, 0],
[     c0, -1.0*s0, 0, 0],
[      0,       0, 0, 0],
[      0,       0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[-1.0*s0*s1, -1.0*c1*s0, -1.0*c0, 0],
[     c0*s1,      c0*c1, -1.0*s0, 0],
[         0,          0,       0, 0],
[         0,          0,       0, 0]]), np.array([
[  c0*c1, -1.0*c0*s1, 0, 0],
[  c1*s0, -1.0*s0*s1, 0, 0],
[-1.0*s1,    -1.0*c1, 0, 0],
[      0,          0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[-1.0*c1*s0*s2 - 1.0*c2*s0*s1, -1.0*c1*c2*s0 + s0*s1*s2, -1.0*c0, -0.27203*s0*s1],
[         c0*c1*s2 + c0*c2*s1,  c0*c1*c2 - 1.0*c0*s1*s2, -1.0*s0,  0.27203*c0*s1],
[                           0,                        0,       0,              0],
[                           0,                        0,       0,              0]]), np.array([
[c0*c1*c2 - 1.0*c0*s1*s2, -1.0*c0*c1*s2 - 1.0*c0*c2*s1, 0, 0.27203*c0*c1],
[c1*c2*s0 - 1.0*s0*s1*s2, -1.0*c1*s0*s2 - 1.0*c2*s0*s1, 0, 0.27203*c1*s0],
[ -1.0*c1*s2 - 1.0*c2*s1,           -1.0*c1*c2 + s1*s2, 0,   -0.27203*s1],
[                      0,                            0, 0,             0]]), np.array([
[c0*c1*c2 - 1.0*c0*s1*s2, -1.0*c0*c1*s2 - 1.0*c0*c2*s1, 0, 0],
[c1*c2*s0 - 1.0*s0*s1*s2, -1.0*c1*s0*s2 - 1.0*c2*s0*s1, 0, 0],
[ -1.0*c1*s2 - 1.0*c2*s1,           -1.0*c1*c2 + s1*s2, 0, 0],
[                      0,                            0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -1.0*c1*c2*s0 + s0*s1*s2, -0.141*c1*c2*s0 + 0.141*s0*s1*s2 - 0.27203*s0*s1],
[         c3*(c0*c1*s2 + c0*c2*s1) + s0*s3,          c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1),  c0*c1*c2 - 1.0*c0*s1*s2,  0.141*c0*c1*c2 - 0.141*c0*s1*s2 + 0.27203*c0*s1],
[                                        0,                                             0,                        0,                                                0],
[                                        0,                                             0,                        0,                                                0]]), np.array([
[c3*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*s3*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*c0*c1*s2 - 1.0*c0*c2*s1, -0.141*c0*c1*s2 + 0.27203*c0*c1 - 0.141*c0*c2*s1],
[c3*(c1*c2*s0 - 1.0*s0*s1*s2), -1.0*s3*(c1*c2*s0 - 1.0*s0*s1*s2), -1.0*c1*s0*s2 - 1.0*c2*s0*s1, -0.141*c1*s0*s2 + 0.27203*c1*s0 - 0.141*c2*s0*s1],
[ c3*(-1.0*c1*s2 - 1.0*c2*s1),  -1.0*s3*(-1.0*c1*s2 - 1.0*c2*s1),           -1.0*c1*c2 + s1*s2,          -0.141*c1*c2 + 0.141*s1*s2 - 0.27203*s1],
[                           0,                                 0,                            0,                                                0]]), np.array([
[c3*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*s3*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*c0*c1*s2 - 1.0*c0*c2*s1, -0.141*c0*c1*s2 - 0.141*c0*c2*s1],
[c3*(c1*c2*s0 - 1.0*s0*s1*s2), -1.0*s3*(c1*c2*s0 - 1.0*s0*s1*s2), -1.0*c1*s0*s2 - 1.0*c2*s0*s1, -0.141*c1*s0*s2 - 0.141*c2*s0*s1],
[ c3*(-1.0*c1*s2 - 1.0*c2*s1),  -1.0*s3*(-1.0*c1*s2 - 1.0*c2*s1),           -1.0*c1*c2 + s1*s2,       -0.141*c1*c2 + 0.141*s1*s2],
[                           0,                                 0,                            0,                                0]]), np.array([
[     c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1), c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0*s0*s3, 0, 0],
[-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1),     c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0, 0],
[              -1.0*s3*(c1*c2 - 1.0*s1*s2),                       c3*(-1.0*c1*c2 + s1*s2), 0, 0],
[                                        0,                                             0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -1.0*c4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s4*(-1.0*c1*c2*s0 + s0*s1*s2), -1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c1*c2*s0 + 0.25*s0*s1*s2 - 0.27203*s0*s1],
[          c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),           -1.0*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2),          -1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1),  0.25*c0*c1*c2 - 0.25*c0*s1*s2 + 0.27203*c0*s1],
[                                                                                 0,                                                                                       0,                                              0,                                              0],
[                                                                                 0,                                                                                       0,                                              0,                                              0]]), np.array([
[-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), -1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), s3*(c0*c1*c2 - 1.0*c0*s1*s2), -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1],
[-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), s3*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c1*s0*s2 + 0.27203*c1*s0 - 0.25*c2*s0*s1],
[           -1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2),            -1.0*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2),  s3*(-1.0*c1*s2 - 1.0*c2*s1),          -0.25*c1*c2 + 0.25*s1*s2 - 0.27203*s1],
[                                                                       0,                                                                            0,                            0,                                              0]]), np.array([
[-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), -1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), s3*(c0*c1*c2 - 1.0*c0*s1*s2), -0.25*c0*c1*s2 - 0.25*c0*c2*s1],
[-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), s3*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c1*s0*s2 - 0.25*c2*s0*s1],
[           -1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2),            -1.0*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2),  s3*(-1.0*c1*s2 - 1.0*c2*s1),       -0.25*c1*c2 + 0.25*s1*s2],
[                                                                       0,                                                                            0,                            0,                              0]]), np.array([
[     -1.0*s4*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)),      -1.0*c4*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)),      c3*(c0*c1*s2 + c0*c2*s1) + s0*s3, 0],
[-1.0*s4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)), -1.0*c4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)), -1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1), 0],
[                          s3*s4*(c1*c2 - 1.0*s1*s2),                           c4*s3*(c1*c2 - 1.0*s1*s2),                c3*(c1*c2 - 1.0*s1*s2), 0],
[                                                  0,                                                   0,                                     0, 0]]), np.array([
[c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2), c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3), 0, 0],
[     c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2),      c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)), 0, 0],
[                 -1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1),                                     c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(c1*s2 + c2*s1), 0, 0],
[                                                                                0,                                                                                  0, 0, 0]]), np.array([
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0],
[0, 0, 0, 0]])], [np.array([
[c5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))) - 1.0*s5*(-1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -1.0*c5*(-1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))), -1.0*c4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s4*(-1.0*c1*c2*s0 + s0*s1*s2), -0.25*c1*c2*s0 - 0.111*c4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 0.25*s0*s1*s2 - 0.27203*s0*s1 - 0.111*s4*(-1.0*c1*c2*s0 + s0*s1*s2)],
[                   c5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) - 1.0*s5*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)),                    -1.0*c5*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 1.0*s5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)),           -1.0*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2),            0.25*c0*c1*c2 - 0.25*c0*s1*s2 + 0.27203*c0*s1 - 0.111*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 0.111*s4*(c0*c1*c2 - 1.0*c0*s1*s2)],

np.array([
[c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 1.0*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*c5*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), -1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.111*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 0.111*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)],
[c5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s3*s5*(c1*c2*s0 - 1.0*s0*s1*s2), -1.0*c5*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c1*s0*s2 + 0.27203*c1*s0 - 0.25*c2*s0*s1 - 0.111*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 0.111*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)],
[            c5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2)) - 1.0*s3*s5*(-1.0*c1*s2 - 1.0*c2*s1),             -1.0*c5*s3*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0*s5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2)),            -1.0*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2),                     -0.25*c1*c2 - 0.111*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) + 0.25*s1*s2 - 0.27203*s1 - 0.111*s4*(-1.0*c1*c2 + s1*s2)],
[                                                                                                                  0,                                                                                                                        0,                                                                            0,                                                                                                                                0]]), np.array([
[c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 1.0*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2), -1.0*c5*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), -1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.111*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 0.111*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)],
[c5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s3*s5*(c1*c2*s0 - 1.0*s0*s1*s2), -1.0*c5*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c1*s0*s2 - 0.25*c2*s0*s1 - 0.111*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 0.111*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)],
[            c5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2)) - 1.0*s3*s5*(-1.0*c1*s2 - 1.0*c2*s1),             -1.0*c5*s3*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0*s5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2)),            -1.0*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2),                  -0.25*c1*c2 - 0.111*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) + 0.25*s1*s2 - 0.111*s4*(-1.0*c1*c2 + s1*s2)],
[                                                                                                                  0,                                                                                                                        0,                                                                            0,                                                                                                                0]]), np.array([
[          -1.0*c5*s4*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)) - 1.0*s5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3),           -1.0*c5*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + s4*s5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)),      -1.0*c4*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)),      -0.111*c4*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1))],
[-1.0*c5*s4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s5*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), -1.0*c5*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + s4*s5*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)), -1.0*c4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)), -0.111*c4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1))],
[                                          -1.0*c3*s5*(c1*c2 - 1.0*s1*s2) + c5*s3*s4*(c1*c2 - 1.0*s1*s2),                                   -1.0*c3*c5*(c1*c2 - 1.0*s1*s2) - 1.0*s3*s4*s5*(c1*c2 - 1.0*s1*s2),                           c4*s3*(c1*c2 - 1.0*s1*s2),                       0.111*c4*s3*(c1*c2 - 1.0*s1*s2)],
[                                                                                                      0,                                                                                                   0,                                                   0,                                                     0]]), np.array([
[c5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2)), -1.0*s5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2)), c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3), 0.111*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.111*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3)],
[     c5*(c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2)),      -1.0*s5*(c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2)),      c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)),      0.111*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 0.111*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1))],
[                 c5*(-1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1)),                  -1.0*s5*(-1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1)),                                     c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(c1*s2 + c2*s1),                                 0.111*c3*s4*(c1*c2 - 1.0*s1*s2) + 0.111*c4*(c1*s2 + c2*s1)],
[                                                                                     0,                                                                                           0,                                                                                  0,                                                                                          0]]), np.array([
[          c5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)) - 1.0*s5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)),           c5*(-1.0*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) - 1.0*s5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)), 0, 0],
[c5*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s5*(c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))), c5*(-1.0*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))) - 1.0*s5*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)), 0, 0],
[                                 -1.0*c5*s3*(c1*c2 - 1.0*s1*s2) - 1.0*s5*(-1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1)),                                             c5*(c3*s4*(c1*c2 - 1.0*s1*s2) - 1.0*c4*(-1.0*c1*s2 - 1.0*c2*s1)) + s3*s5*(c1*c2 - 1.0*s1*s2), 0, 0],
[                                                                                                                                      0,                                                                                                                                        0, 0, 0]])]]
def get_Kw(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [np.array([
[  0, 0, 0, 0, 0, 0],
[  0, 0, 0, 0, 0, 0],
[1.0, 0, 0, 0, 0, 0]]), np.array([
[  0,   0, 0, 0, 0, 0],
[  0,   0, 0, 0, 0, 0],
[1.0, 1.0, 0, 0, 0, 0]]), np.array([
[  0,   0, -1.0*s0, 0, 0, 0],
[  0,   0,      c0, 0, 0, 0],
[1.0, 1.0,       0, 0, 0, 0]]), np.array([
[  0,   0, -1.0*s0, -1.0*s0, 0, 0],
[  0,   0,      c0,      c0, 0, 0],
[1.0, 1.0,       0,       0, 0, 0]]), np.array([
[  0,   0, -1.0*s0, -1.0*s0, c0*c1*c2 - 1.0*c0*s1*s2, 0],
[  0,   0,      c0,      c0, c1*c2*s0 - 1.0*s0*s1*s2, 0],
[1.0, 1.0,       0,       0,  -1.0*c1*s2 - 1.0*c2*s1, 0]]), np.array([
[  0,   0, -1.0*s0, -1.0*s0, c0*c1*c2 - 1.0*c0*s1*s2, -1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)],
[  0,   0,      c0,      c0, c1*c2*s0 - 1.0*s0*s1*s2,      c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)],
[1.0, 1.0,       0,       0,  -1.0*c1*s2 - 1.0*c2*s1,                s3*(c1*c2 - 1.0*s1*s2)]])]
def get_dKw_dq(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [[np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, 0, -1.0*c0, 0, 0, 0],
[0, 0, -1.0*s0, 0, 0, 0],
[0, 0,       0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, 0, -1.0*c0, -1.0*c0, 0, 0],
[0, 0, -1.0*s0, -1.0*s0, 0, 0],
[0, 0,       0,       0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, 0, -1.0*c0, -1.0*c0, -1.0*c1*c2*s0 + s0*s1*s2, 0],
[0, 0, -1.0*s0, -1.0*s0,  c0*c1*c2 - 1.0*c0*s1*s2, 0],
[0, 0,       0,       0,                        0, 0]]), np.array([
[0, 0, 0, 0, -1.0*c0*c1*s2 - 1.0*c0*c2*s1, 0],
[0, 0, 0, 0, -1.0*c1*s0*s2 - 1.0*c2*s0*s1, 0],
[0, 0, 0, 0,           -1.0*c1*c2 + s1*s2, 0]]), np.array([
[0, 0, 0, 0, -1.0*c0*c1*s2 - 1.0*c0*c2*s1, 0],
[0, 0, 0, 0, -1.0*c1*s0*s2 - 1.0*c2*s0*s1, 0],
[0, 0, 0, 0,           -1.0*c1*c2 + s1*s2, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[0, 0, -1.0*c0, -1.0*c0, -1.0*c1*c2*s0 + s0*s1*s2, -1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)],
[0, 0, -1.0*s0, -1.0*s0,  c0*c1*c2 - 1.0*c0*s1*s2,          -1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)],
[0, 0,       0,       0,                        0,                                              0]]), np.array([
[0, 0, 0, 0, -1.0*c0*c1*s2 - 1.0*c0*c2*s1, s3*(c0*c1*c2 - 1.0*c0*s1*s2)],
[0, 0, 0, 0, -1.0*c1*s0*s2 - 1.0*c2*s0*s1, s3*(c1*c2*s0 - 1.0*s0*s1*s2)],
[0, 0, 0, 0,           -1.0*c1*c2 + s1*s2,  s3*(-1.0*c1*s2 - 1.0*c2*s1)]]), np.array([
[0, 0, 0, 0, -1.0*c0*c1*s2 - 1.0*c0*c2*s1, s3*(c0*c1*c2 - 1.0*c0*s1*s2)],
[0, 0, 0, 0, -1.0*c1*s0*s2 - 1.0*c2*s0*s1, s3*(c1*c2*s0 - 1.0*s0*s1*s2)],
[0, 0, 0, 0,           -1.0*c1*c2 + s1*s2,  s3*(-1.0*c1*s2 - 1.0*c2*s1)]]), np.array([
[0, 0, 0, 0, 0,      c3*(c0*c1*s2 + c0*c2*s1) + s0*s3],
[0, 0, 0, 0, 0, -1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)],
[0, 0, 0, 0, 0,                c3*(c1*c2 - 1.0*s1*s2)]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])]]
def get_J(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [np.array([
[ 0.00822*c0 + 0.00284*s0, 0, 0, 0, 0, 0],
[-0.00284*c0 + 0.00822*s0, 0, 0, 0, 0, 0],
[                       0, 0, 0, 0, 0, 0],
[                       0, 0, 0, 0, 0, 0]]), np.array([
[-0.00551*c0 + 0.02322*c1*s0 - 0.14556*s0*s1, 0.14556*c0*c1 + 0.02322*c0*s1, 0, 0, 0, 0],
[-0.02322*c0*c1 + 0.14556*c0*s1 - 0.00551*s0, 0.14556*c1*s0 + 0.02322*s0*s1, 0, 0, 0, 0],
[                                          0,       0.02322*c1 - 0.14556*s1, 0, 0, 0, 0],
[                                          0,                             0, 0, 0, 0, 0]]), np.array([
[0.01023*c0 - 0.04343*c1*c2*s0 + 0.00169*c1*s0*s2 + 0.00169*c2*s0*s1 + 0.04343*s0*s1*s2 - 0.27203*s0*s1, -0.00169*c0*c1*c2 - 0.04343*c0*c1*s2 + 0.27203*c0*c1 - 0.04343*c0*c2*s1 + 0.00169*c0*s1*s2, -0.00169*c0*c1*c2 - 0.04343*c0*c1*s2 - 0.04343*c0*c2*s1 + 0.00169*c0*s1*s2, 0, 0, 0],
[0.04343*c0*c1*c2 - 0.00169*c0*c1*s2 - 0.00169*c0*c2*s1 - 0.04343*c0*s1*s2 + 0.27203*c0*s1 + 0.01023*s0, -0.00169*c1*c2*s0 - 0.04343*c1*s0*s2 + 0.27203*c1*s0 - 0.04343*c2*s0*s1 + 0.00169*s0*s1*s2, -0.00169*c1*c2*s0 - 0.04343*c1*s0*s2 - 0.04343*c2*s0*s1 + 0.00169*s0*s1*s2, 0, 0, 0],
[                                                                                                     0,                -0.04343*c1*c2 + 0.00169*c1*s2 + 0.00169*c2*s1 + 0.04343*s1*s2 - 0.27203*s1,             -0.04343*c1*c2 + 0.00169*c1*s2 + 0.00169*c2*s1 + 0.04343*s1*s2, 0, 0, 0],
[                                                                                                     0,                                                                                          0,                                                                          0, 0, 0, 0]]), np.array([
[         0.00536*c0*c3 - 0.19561*c1*c2*s0 + 0.19561*s0*s1*s2 - 0.27203*s0*s1 + 0.00536*s3*(c1*s0*s2 + c2*s0*s1), -0.19561*c0*c1*s2 + 0.27203*c0*c1 - 0.19561*c0*c2*s1 + 0.00536*s3*(-1.0*c0*c1*c2 + c0*s1*s2), -0.19561*c0*c1*s2 - 0.19561*c0*c2*s1 + 0.00536*s3*(-1.0*c0*c1*c2 + c0*s1*s2), 0.00536*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00536*s0*s3, 0, 0],
[0.19561*c0*c1*c2 - 0.19561*c0*s1*s2 + 0.27203*c0*s1 + 0.00536*c3*s0 + 0.00536*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), -0.19561*c1*s0*s2 + 0.27203*c1*s0 - 0.19561*c2*s0*s1 + 0.00536*s3*(-1.0*c1*c2*s0 + s0*s1*s2), -0.19561*c1*s0*s2 - 0.19561*c2*s0*s1 + 0.00536*s3*(-1.0*c1*c2*s0 + s0*s1*s2), 0.00536*c0*s3 + 0.00536*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0, 0],
[                                                                                                              0,            -0.19561*c1*c2 + 0.19561*s1*s2 - 0.27203*s1 - 0.00536*s3*(-1.0*c1*s2 - 1.0*c2*s1),         -0.19561*c1*c2 + 0.19561*s1*s2 - 0.00536*s3*(-1.0*c1*s2 - 1.0*c2*s1),                           -0.00536*c3*(c1*c2 - 1.0*s1*s2), 0, 0],
[                                                                                                              0,                                                                                            0,                                                                            0,                                                         0, 0, 0]]), np.array([
[0.00538*c0*c3 - 0.25*c1*c2*s0 + 0.03277*c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.25*s0*s1*s2 - 0.27203*s0*s1 - 0.00538*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 3.0e-5*s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 0.03277*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.03277*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 3.0e-5*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00538*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*s4*(c0*c1*s2 + c0*c2*s1), -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.03277*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 3.0e-5*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00538*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*s4*(c0*c1*s2 + c0*c2*s1), -0.00538*c3*(c0*c1*s2 + c0*c2*s1) + 0.03277*c4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.00538*s0*s3 - 3.0e-5*s4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), -3.0e-5*c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 0.03277*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.03277*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 3.0e-5*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 0],
[                           0.25*c0*c1*c2 - 0.25*c0*s1*s2 + 0.27203*c0*s1 + 0.00538*c3*s0 + 0.03277*c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 3.0e-5*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 0.00538*s3*(c0*c1*s2 + c0*c2*s1) - 3.0e-5*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 0.03277*s4*(-1.0*c0*c1*c2 + c0*s1*s2), -0.25*c1*s0*s2 + 0.27203*c1*s0 - 0.25*c2*s0*s1 - 0.03277*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + 3.0e-5*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) - 3.0e-5*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 0.00538*s3*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*s4*(c1*s0*s2 + c2*s0*s1), -0.25*c1*s0*s2 - 0.25*c2*s0*s1 - 0.03277*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + 3.0e-5*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) - 3.0e-5*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 0.00538*s3*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*s4*(c1*s0*s2 + c2*s0*s1),            0.00538*c0*s3 - 0.00538*c3*(c1*s0*s2 + c2*s0*s1) + 0.03277*c4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 3.0e-5*s4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)),           -3.0e-5*c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) + 0.03277*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 0.03277*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) + 3.0e-5*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 0],
[                                                                                                                                                                                                                                                                                                                         0,                                           -0.25*c1*c2 + 0.03277*c3*c4*(c1*s2 + c2*s1) - 3.0e-5*c3*s4*(c1*s2 + c2*s1) - 3.0e-5*c4*(-1.0*c1*c2 + s1*s2) + 0.25*s1*s2 - 0.27203*s1 - 0.00538*s3*(-1.0*c1*s2 - 1.0*c2*s1) + 0.03277*s4*(c1*c2 - 1.0*s1*s2),                                        -0.25*c1*c2 + 0.03277*c3*c4*(c1*s2 + c2*s1) - 3.0e-5*c3*s4*(c1*s2 + c2*s1) - 3.0e-5*c4*(-1.0*c1*c2 + s1*s2) + 0.25*s1*s2 - 0.00538*s3*(-1.0*c1*s2 - 1.0*c2*s1) + 0.03277*s4*(c1*c2 - 1.0*s1*s2),                                                   -0.00538*c3*(c1*c2 - 1.0*s1*s2) - 0.03277*c4*s3*(-1.0*c1*c2 + s1*s2) + 3.0e-5*s3*s4*(-1.0*c1*c2 + s1*s2),                                                     -3.0e-5*c3*c4*(-1.0*c1*c2 + s1*s2) - 0.03277*c3*s4*(-1.0*c1*c2 + s1*s2) + 0.03277*c4*(c1*s2 + c2*s1) + 3.0e-5*s4*(-1.0*c1*s2 - 1.0*c2*s1), 0],
np.array([
[-0.25*c1*c2*s0 + 0.11804*c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0e-5*c5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) + s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))) + 0.25*s0*s1*s2 - 0.27203*s0*s1 + 0.11804*s4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*s5*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.11804*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) + 1.0e-5*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*s4*(c0*c1*s2 + c0*c2*s1), -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.11804*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) + 1.0e-5*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*s4*(c0*c1*s2 + c0*c2*s1), 0.11804*c4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 1.0e-5*c5*s4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 1.0e-5*s5*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3), 0.11804*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0e-5*c5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2)) - 0.11804*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3),           -1.0e-5*c5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)) + 1.0e-5*s5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3))],
[                            0.25*c0*c1*c2 - 0.25*c0*s1*s2 + 0.27203*c0*s1 + 0.11804*c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0e-5*c5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) + s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3)) + 0.11804*s4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0e-5*s5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)), -0.25*c1*s0*s2 + 0.27203*c1*s0 - 0.25*c2*s0*s1 - 0.11804*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 1.0e-5*s3*s5*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*s4*(c1*s0*s2 + c2*s0*s1), -0.25*c1*s0*s2 - 0.25*c2*s0*s1 - 0.11804*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 1.0e-5*s3*s5*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*s4*(c1*s0*s2 + c2*s0*s1),                0.11804*c4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*c5*s4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*s5*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)),           0.11804*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0e-5*c5*(c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2)) - 0.11804*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)), -1.0e-5*c5*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)) + 1.0e-5*s5*(c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)))],
[                                                                                                                                                                                                                                                                                                                        0,                                                         -0.25*c1*c2 + 0.11804*c3*c4*(c1*s2 + c2*s1) - 1.0e-5*c5*(c3*s4*(c1*s2 + c2*s1) + c4*(-1.0*c1*c2 + s1*s2)) + 0.25*s1*s2 - 0.27203*s1 - 1.0e-5*s3*s5*(c1*s2 + c2*s1) + 0.11804*s4*(c1*c2 - 1.0*s1*s2),                                                      -0.25*c1*c2 + 0.11804*c3*c4*(c1*s2 + c2*s1) - 1.0e-5*c5*(c3*s4*(c1*s2 + c2*s1) + c4*(-1.0*c1*c2 + s1*s2)) + 0.25*s1*s2 - 1.0e-5*s3*s5*(c1*s2 + c2*s1) + 0.11804*s4*(c1*c2 - 1.0*s1*s2),                                                    -1.0e-5*c3*s5*(-1.0*c1*c2 + s1*s2) - 0.11804*c4*s3*(-1.0*c1*c2 + s1*s2) + 1.0e-5*c5*s3*s4*(-1.0*c1*c2 + s1*s2),                                                    -0.11804*c3*s4*(-1.0*c1*c2 + s1*s2) + 0.11804*c4*(c1*s2 + c2*s1) - 1.0e-5*c5*(c3*c4*(-1.0*c1*c2 + s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1)),                                      -1.0e-5*c5*s3*(-1.0*c1*c2 + s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1))],

def get_dJ_dq(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return [[np.array([
[0.00284*c0 - 0.00822*s0, 0, 0, 0, 0, 0],
[0.00822*c0 + 0.00284*s0, 0, 0, 0, 0, 0],
[                      0, 0, 0, 0, 0, 0],
[                      0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[ 0.02322*c0*c1 - 0.14556*c0*s1 + 0.00551*s0, -0.14556*c1*s0 - 0.02322*s0*s1, 0, 0, 0, 0],
[-0.00551*c0 + 0.02322*c1*s0 - 0.14556*s0*s1,  0.14556*c0*c1 + 0.02322*c0*s1, 0, 0, 0, 0],
[                                          0,                              0, 0, 0, 0, 0],
[                                          0,                              0, 0, 0, 0, 0]]), np.array([
[-0.14556*c1*s0 - 0.02322*s0*s1, 0.02322*c0*c1 - 0.14556*c0*s1, 0, 0, 0, 0],
[ 0.14556*c0*c1 + 0.02322*c0*s1, 0.02322*c1*s0 - 0.14556*s0*s1, 0, 0, 0, 0],
[                             0,      -0.14556*c1 - 0.02322*s1, 0, 0, 0, 0],
[                             0,                             0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.04343*c0*c1*c2 + 0.00169*c0*c1*s2 + 0.00169*c0*c2*s1 + 0.04343*c0*s1*s2 - 0.27203*c0*s1 - 0.01023*s0,  0.00169*c1*c2*s0 + 0.04343*c1*s0*s2 - 0.27203*c1*s0 + 0.04343*c2*s0*s1 - 0.00169*s0*s1*s2,  0.00169*c1*c2*s0 + 0.04343*c1*s0*s2 + 0.04343*c2*s0*s1 - 0.00169*s0*s1*s2, 0, 0, 0],
[ 0.01023*c0 - 0.04343*c1*c2*s0 + 0.00169*c1*s0*s2 + 0.00169*c2*s0*s1 + 0.04343*s0*s1*s2 - 0.27203*s0*s1, -0.00169*c0*c1*c2 - 0.04343*c0*c1*s2 + 0.27203*c0*c1 - 0.04343*c0*c2*s1 + 0.00169*c0*s1*s2, -0.00169*c0*c1*c2 - 0.04343*c0*c1*s2 - 0.04343*c0*c2*s1 + 0.00169*c0*s1*s2, 0, 0, 0],
[                                                                                                      0,                                                                                          0,                                                                          0, 0, 0, 0],
[                                                                                                      0,                                                                                          0,                                                                          0, 0, 0, 0]]), np.array([
[ 0.00169*c1*c2*s0 + 0.04343*c1*s0*s2 - 0.27203*c1*s0 + 0.04343*c2*s0*s1 - 0.00169*s0*s1*s2, -0.04343*c0*c1*c2 + 0.00169*c0*c1*s2 + 0.00169*c0*c2*s1 + 0.04343*c0*s1*s2 - 0.27203*c0*s1, -0.04343*c0*c1*c2 + 0.00169*c0*c1*s2 + 0.00169*c0*c2*s1 + 0.04343*c0*s1*s2, 0, 0, 0],
[-0.00169*c0*c1*c2 - 0.04343*c0*c1*s2 + 0.27203*c0*c1 - 0.04343*c0*c2*s1 + 0.00169*c0*s1*s2, -0.04343*c1*c2*s0 + 0.00169*c1*s0*s2 + 0.00169*c2*s0*s1 + 0.04343*s0*s1*s2 - 0.27203*s0*s1, -0.04343*c1*c2*s0 + 0.00169*c1*s0*s2 + 0.00169*c2*s0*s1 + 0.04343*s0*s1*s2, 0, 0, 0],
[                                                                                         0,                 0.00169*c1*c2 + 0.04343*c1*s2 - 0.27203*c1 + 0.04343*c2*s1 - 0.00169*s1*s2,              0.00169*c1*c2 + 0.04343*c1*s2 + 0.04343*c2*s1 - 0.00169*s1*s2, 0, 0, 0],
[                                                                                         0,                                                                                          0,                                                                          0, 0, 0, 0]]), np.array([
[ 0.00169*c1*c2*s0 + 0.04343*c1*s0*s2 + 0.04343*c2*s0*s1 - 0.00169*s0*s1*s2, -0.04343*c0*c1*c2 + 0.00169*c0*c1*s2 + 0.00169*c0*c2*s1 + 0.04343*c0*s1*s2, -0.04343*c0*c1*c2 + 0.00169*c0*c1*s2 + 0.00169*c0*c2*s1 + 0.04343*c0*s1*s2, 0, 0, 0],
[-0.00169*c0*c1*c2 - 0.04343*c0*c1*s2 - 0.04343*c0*c2*s1 + 0.00169*c0*s1*s2, -0.04343*c1*c2*s0 + 0.00169*c1*s0*s2 + 0.00169*c2*s0*s1 + 0.04343*s0*s1*s2, -0.04343*c1*c2*s0 + 0.00169*c1*s0*s2 + 0.00169*c2*s0*s1 + 0.04343*s0*s1*s2, 0, 0, 0],
[                                                                         0,              0.00169*c1*c2 + 0.04343*c1*s2 + 0.04343*c2*s1 - 0.00169*s1*s2,              0.00169*c1*c2 + 0.04343*c1*s2 + 0.04343*c2*s1 - 0.00169*s1*s2, 0, 0, 0],
[                                                                         0,                                                                          0,                                                                          0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[-0.19561*c0*c1*c2 + 0.19561*c0*s1*s2 - 0.27203*c0*s1 - 0.00536*c3*s0 + 0.00536*s3*(c0*c1*s2 + c0*c2*s1),   0.19561*c1*s0*s2 - 0.27203*c1*s0 + 0.19561*c2*s0*s1 + 0.00536*s3*(c1*c2*s0 - 1.0*s0*s1*s2),   0.19561*c1*s0*s2 + 0.19561*c2*s0*s1 + 0.00536*s3*(c1*c2*s0 - 1.0*s0*s1*s2),         -0.00536*c0*s3 + 0.00536*c3*(c1*s0*s2 + c2*s0*s1), 0, 0],
[ 0.00536*c0*c3 - 0.19561*c1*c2*s0 + 0.19561*s0*s1*s2 - 0.27203*s0*s1 + 0.00536*s3*(c1*s0*s2 + c2*s0*s1), -0.19561*c0*c1*s2 + 0.27203*c0*c1 - 0.19561*c0*c2*s1 + 0.00536*s3*(-1.0*c0*c1*c2 + c0*s1*s2), -0.19561*c0*c1*s2 - 0.19561*c0*c2*s1 + 0.00536*s3*(-1.0*c0*c1*c2 + c0*s1*s2), 0.00536*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00536*s0*s3, 0, 0],
[                                                                                                      0,                                                                                            0,                                                                            0,                                                         0, 0, 0],
[                                                                                                      0,                                                                                            0,                                                                            0,                                                         0, 0, 0]]), np.array([
[  0.19561*c1*s0*s2 - 0.27203*c1*s0 + 0.19561*c2*s0*s1 + 0.00536*s3*(c1*c2*s0 - 1.0*s0*s1*s2), -0.19561*c0*c1*c2 + 0.19561*c0*s1*s2 - 0.27203*c0*s1 + 0.00536*s3*(c0*c1*s2 + c0*c2*s1), -0.19561*c0*c1*c2 + 0.19561*c0*s1*s2 + 0.00536*s3*(c0*c1*s2 + c0*c2*s1), 0.00536*c3*(-1.0*c0*c1*c2 + c0*s1*s2), 0, 0],
[-0.19561*c0*c1*s2 + 0.27203*c0*c1 - 0.19561*c0*c2*s1 + 0.00536*s3*(-1.0*c0*c1*c2 + c0*s1*s2), -0.19561*c1*c2*s0 + 0.19561*s0*s1*s2 - 0.27203*s0*s1 + 0.00536*s3*(c1*s0*s2 + c2*s0*s1), -0.19561*c1*c2*s0 + 0.19561*s0*s1*s2 + 0.00536*s3*(c1*s0*s2 + c2*s0*s1), 0.00536*c3*(-1.0*c1*c2*s0 + s0*s1*s2), 0, 0],
[                                                                                           0,            0.19561*c1*s2 - 0.27203*c1 + 0.19561*c2*s1 - 0.00536*s3*(-1.0*c1*c2 + s1*s2),         0.19561*c1*s2 + 0.19561*c2*s1 - 0.00536*s3*(-1.0*c1*c2 + s1*s2),  -0.00536*c3*(-1.0*c1*s2 - 1.0*c2*s1), 0, 0],
[                                                                                           0,                                                                                       0,                                                                       0,                                     0, 0, 0]]), np.array([
[  0.19561*c1*s0*s2 + 0.19561*c2*s0*s1 + 0.00536*s3*(c1*c2*s0 - 1.0*s0*s1*s2), -0.19561*c0*c1*c2 + 0.19561*c0*s1*s2 + 0.00536*s3*(c0*c1*s2 + c0*c2*s1), -0.19561*c0*c1*c2 + 0.19561*c0*s1*s2 + 0.00536*s3*(c0*c1*s2 + c0*c2*s1), 0.00536*c3*(-1.0*c0*c1*c2 + c0*s1*s2), 0, 0],
[-0.19561*c0*c1*s2 - 0.19561*c0*c2*s1 + 0.00536*s3*(-1.0*c0*c1*c2 + c0*s1*s2), -0.19561*c1*c2*s0 + 0.19561*s0*s1*s2 + 0.00536*s3*(c1*s0*s2 + c2*s0*s1), -0.19561*c1*c2*s0 + 0.19561*s0*s1*s2 + 0.00536*s3*(c1*s0*s2 + c2*s0*s1), 0.00536*c3*(-1.0*c1*c2*s0 + s0*s1*s2), 0, 0],
[                                                                           0,         0.19561*c1*s2 + 0.19561*c2*s1 - 0.00536*s3*(-1.0*c1*c2 + s1*s2),         0.19561*c1*s2 + 0.19561*c2*s1 - 0.00536*s3*(-1.0*c1*c2 + s1*s2),  -0.00536*c3*(-1.0*c1*s2 - 1.0*c2*s1), 0, 0],
[                                                                           0,                                                                       0,                                                                       0,                                     0, 0, 0]]), np.array([
[        -0.00536*c0*s3 + 0.00536*c3*(c1*s0*s2 + c2*s0*s1), 0.00536*c3*(-1.0*c0*c1*c2 + c0*s1*s2), 0.00536*c3*(-1.0*c0*c1*c2 + c0*s1*s2), -0.00536*c3*s0 - 0.00536*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), 0, 0],
[0.00536*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00536*s0*s3, 0.00536*c3*(-1.0*c1*c2*s0 + s0*s1*s2), 0.00536*c3*(-1.0*c1*c2*s0 + s0*s1*s2),  0.00536*c0*c3 - 0.00536*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0, 0],
[                                                        0,  -0.00536*c3*(-1.0*c1*s2 - 1.0*c2*s1),  -0.00536*c3*(-1.0*c1*s2 - 1.0*c2*s1),                             0.00536*s3*(c1*c2 - 1.0*s1*s2), 0, 0],
[                                                        0,                                     0,                                     0,                                                          0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]]), np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[       -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.27203*c0*s1 - 0.00538*c3*s0 + 0.03277*c4*(-1.0*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + s0*s3) - 3.0e-5*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.00538*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 3.0e-5*s4*(-1.0*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + s0*s3) + 0.03277*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 0.25*c1*s0*s2 - 0.27203*c1*s0 + 0.25*c2*s0*s1 - 0.03277*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 3.0e-5*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) - 3.0e-5*c4*(c1*s0*s2 + c2*s0*s1) - 0.00538*s3*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.03277*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0.25*c1*s0*s2 + 0.25*c2*s0*s1 - 0.03277*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 3.0e-5*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) - 3.0e-5*c4*(c1*s0*s2 + c2*s0*s1) - 0.00538*s3*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.03277*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.00538*c0*s3 - 0.00538*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.03277*c4*(-1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 3.0e-5*s4*(-1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -3.0e-5*c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 0.03277*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 0.03277*s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 3.0e-5*s4*(-1.0*c1*c2*s0 + s0*s1*s2), 0],
[0.00538*c0*c3 - 0.25*c1*c2*s0 + 0.03277*c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.25*s0*s1*s2 - 0.27203*s0*s1 - 0.00538*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 3.0e-5*s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 0.03277*s4*(c1*c2*s0 - 1.0*s0*s1*s2),   -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.03277*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 3.0e-5*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00538*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*s4*(c0*c1*s2 + c0*c2*s1),   -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.03277*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 3.0e-5*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00538*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*s4*(c0*c1*s2 + c0*c2*s1),                            -0.00538*c3*(c0*c1*s2 + c0*c2*s1) + 0.03277*c4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.00538*s0*s3 - 3.0e-5*s4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)),                   -3.0e-5*c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 0.03277*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.03277*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 3.0e-5*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 0],

np.array([
[0.25*c1*s0*s2 - 0.27203*c1*s0 + 0.25*c2*s0*s1 - 0.03277*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 3.0e-5*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) - 3.0e-5*c4*(c1*s0*s2 + c2*s0*s1) - 0.00538*s3*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.03277*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.27203*c0*s1 - 0.03277*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 3.0e-5*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 3.0e-5*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.00538*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.03277*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.03277*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 3.0e-5*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 3.0e-5*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.00538*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.03277*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.00538*c3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 3.0e-5*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*(c0*c1*s2 + c0*c2*s1) + 3.0e-5*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), 0],
[  -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.03277*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 3.0e-5*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00538*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*s4*(c0*c1*s2 + c0*c2*s1), -0.25*c1*c2*s0 - 0.03277*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 3.0e-5*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.25*s0*s1*s2 - 0.27203*s0*s1 - 0.00538*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.03277*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c1*c2*s0 - 0.03277*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 3.0e-5*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.25*s0*s1*s2 - 0.00538*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.03277*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.00538*c3*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 3.0e-5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 3.0e-5*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*(c1*s0*s2 + c2*s0*s1) + 3.0e-5*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0],
[                                                                                                                                                                                                                                                       0,                                                       0.25*c1*s2 - 0.27203*c1 + 0.25*c2*s1 + 0.03277*c3*c4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c3*s4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c4*(c1*s2 + c2*s1) - 0.00538*s3*(-1.0*c1*c2 + s1*s2) + 0.03277*s4*(-1.0*c1*s2 - 1.0*c2*s1),                                                    0.25*c1*s2 + 0.25*c2*s1 + 0.03277*c3*c4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c3*s4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c4*(c1*s2 + c2*s1) - 0.00538*s3*(-1.0*c1*c2 + s1*s2) + 0.03277*s4*(-1.0*c1*s2 - 1.0*c2*s1),                      -0.00538*c3*(-1.0*c1*s2 - 1.0*c2*s1) - 0.03277*c4*s3*(c1*s2 + c2*s1) + 3.0e-5*s3*s4*(c1*s2 + c2*s1),                                -3.0e-5*c3*c4*(c1*s2 + c2*s1) - 0.03277*c3*s4*(c1*s2 + c2*s1) + 0.03277*c4*(c1*c2 - 1.0*s1*s2) + 3.0e-5*s4*(-1.0*c1*c2 + s1*s2), 0],
np.array([
[0.25*c1*s0*s2 + 0.25*c2*s0*s1 - 0.03277*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 3.0e-5*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) - 3.0e-5*c4*(c1*s0*s2 + c2*s0*s1) - 0.00538*s3*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.03277*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.03277*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 3.0e-5*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 3.0e-5*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.00538*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.03277*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.03277*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 3.0e-5*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 3.0e-5*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.00538*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.03277*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.00538*c3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 3.0e-5*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*(c0*c1*s2 + c0*c2*s1) + 3.0e-5*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), 0],
[  -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.03277*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 3.0e-5*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 0.00538*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*s4*(c0*c1*s2 + c0*c2*s1), -0.25*c1*c2*s0 - 0.03277*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 3.0e-5*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.25*s0*s1*s2 - 0.00538*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.03277*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c1*c2*s0 - 0.03277*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 3.0e-5*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.25*s0*s1*s2 - 0.00538*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.03277*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.00538*c3*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 3.0e-5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 3.0e-5*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*(c1*s0*s2 + c2*s0*s1) + 3.0e-5*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0],
[                                                                                                                                                                                                                                       0,                                                    0.25*c1*s2 + 0.25*c2*s1 + 0.03277*c3*c4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c3*s4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c4*(c1*s2 + c2*s1) - 0.00538*s3*(-1.0*c1*c2 + s1*s2) + 0.03277*s4*(-1.0*c1*s2 - 1.0*c2*s1),                                                    0.25*c1*s2 + 0.25*c2*s1 + 0.03277*c3*c4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c3*s4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c4*(c1*s2 + c2*s1) - 0.00538*s3*(-1.0*c1*c2 + s1*s2) + 0.03277*s4*(-1.0*c1*s2 - 1.0*c2*s1),                      -0.00538*c3*(-1.0*c1*s2 - 1.0*c2*s1) - 0.03277*c4*s3*(c1*s2 + c2*s1) + 3.0e-5*s3*s4*(c1*s2 + c2*s1),                                -3.0e-5*c3*c4*(c1*s2 + c2*s1) - 0.03277*c3*s4*(c1*s2 + c2*s1) + 0.03277*c4*(c1*c2 - 1.0*s1*s2) + 3.0e-5*s4*(-1.0*c1*c2 + s1*s2), 0],
np.array([
[         -0.00538*c0*s3 - 0.00538*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.03277*c4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)) - 3.0e-5*s4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)), -0.00538*c3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.00538*c3*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 3.0e-5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2),          -0.00538*c3*s0 + 0.03277*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) + 0.00538*s3*(c0*c1*s2 + c0*c2*s1) - 3.0e-5*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3), -3.0e-5*c4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 0.03277*s4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), 0],
[-0.00538*c3*(c0*c1*s2 + c0*c2*s1) + 0.03277*c4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 0.00538*s0*s3 - 3.0e-5*s4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), -0.00538*c3*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 3.0e-5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.00538*c3*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 3.0e-5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 0.00538*c0*c3 + 0.03277*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) + 0.00538*s3*(c1*s0*s2 + c2*s0*s1) - 3.0e-5*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)),           -3.0e-5*c4*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 0.03277*s4*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 0],
[                                                                                                                                                                                   0,                      -0.00538*c3*(-1.0*c1*s2 - 1.0*c2*s1) - 0.03277*c4*s3*(c1*s2 + c2*s1) + 3.0e-5*s3*s4*(c1*s2 + c2*s1),                      -0.00538*c3*(-1.0*c1*s2 - 1.0*c2*s1) - 0.03277*c4*s3*(c1*s2 + c2*s1) + 3.0e-5*s3*s4*(c1*s2 + c2*s1),                                                  -0.03277*c3*c4*(-1.0*c1*c2 + s1*s2) + 3.0e-5*c3*s4*(-1.0*c1*c2 + s1*s2) + 0.00538*s3*(c1*c2 - 1.0*s1*s2),                                                            3.0e-5*c4*s3*(-1.0*c1*c2 + s1*s2) + 0.03277*s3*s4*(-1.0*c1*c2 + s1*s2), 0],
np.array([
[-3.0e-5*c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 0.03277*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 0.03277*s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 3.0e-5*s4*(-1.0*c1*c2*s0 + s0*s1*s2), 3.0e-5*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*(c0*c1*s2 + c0*c2*s1) + 3.0e-5*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), 3.0e-5*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.03277*c4*(c0*c1*s2 + c0*c2*s1) + 3.0e-5*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1), -3.0e-5*c4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.03277*s4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), 0.03277*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 3.0e-5*c4*(-1.0*c0*c1*c2 + c0*s1*s2) + 3.0e-5*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 0.03277*s4*(-1.0*c0*c1*c2 + c0*s1*s2), 0],
[                  -3.0e-5*c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 0.03277*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 0.03277*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 3.0e-5*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 3.0e-5*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*(c1*s0*s2 + c2*s0*s1) + 3.0e-5*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 3.0e-5*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.03277*c4*(c1*s0*s2 + c2*s0*s1) + 3.0e-5*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1),           -3.0e-5*c4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 0.03277*s4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)), 0.03277*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 3.0e-5*c4*(-1.0*c1*c2*s0 + s0*s1*s2) + 3.0e-5*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 0.03277*s4*(-1.0*c1*c2*s0 + s0*s1*s2), 0],
[                                                                                                                                                                                                              0,                                -3.0e-5*c3*c4*(c1*s2 + c2*s1) - 0.03277*c3*s4*(c1*s2 + c2*s1) + 0.03277*c4*(c1*c2 - 1.0*s1*s2) + 3.0e-5*s4*(-1.0*c1*c2 + s1*s2),                                -3.0e-5*c3*c4*(c1*s2 + c2*s1) - 0.03277*c3*s4*(c1*s2 + c2*s1) + 0.03277*c4*(c1*c2 - 1.0*s1*s2) + 3.0e-5*s4*(-1.0*c1*c2 + s1*s2),                                  3.0e-5*c4*s3*(-1.0*c1*c2 + s1*s2) + 0.03277*s3*s4*(-1.0*c1*c2 + s1*s2),                                                     -0.03277*c3*c4*(-1.0*c1*c2 + s1*s2) + 3.0e-5*c3*s4*(-1.0*c1*c2 + s1*s2) - 3.0e-5*c4*(c1*s2 + c2*s1) - 0.03277*s4*(c1*s2 + c2*s1), 0],
np.array([
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0]])], [np.array([
[   -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.27203*c0*s1 + 0.11804*c4*(-1.0*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + s0*s3) - 1.0e-5*c5*(c4*(-1.0*c0*c1*c2 + c0*s1*s2) + s4*(-1.0*c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + s0*s3)) + 0.11804*s4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*s5*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), 0.25*c1*s0*s2 - 0.27203*c1*s0 + 0.25*c2*s0*s1 - 0.11804*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) + c4*(c1*s0*s2 + c2*s0*s1)) + 1.0e-5*s3*s5*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.11804*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0.25*c1*s0*s2 + 0.25*c2*s0*s1 - 0.11804*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) + c4*(c1*s0*s2 + c2*s0*s1)) + 1.0e-5*s3*s5*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.11804*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), 0.11804*c4*(-1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0e-5*c5*s4*(-1.0*c0*c3 + s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0e-5*s5*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 0.11804*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*(c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s4*(-1.0*c1*c2*s0 + s0*s1*s2)) - 0.11804*s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -1.0e-5*c5*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 1.0e-5*s5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)))],
[-0.25*c1*c2*s0 + 0.11804*c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0e-5*c5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) + s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))) + 0.25*s0*s1*s2 - 0.27203*s0*s1 + 0.11804*s4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*s5*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)),   -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.11804*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) + 1.0e-5*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*s4*(c0*c1*s2 + c0*c2*s1),   -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.11804*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) + 1.0e-5*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*s4*(c0*c1*s2 + c0*c2*s1),                            0.11804*c4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 1.0e-5*c5*s4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 1.0e-5*s5*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3),                   0.11804*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0e-5*c5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2)) - 0.11804*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3),                    -1.0e-5*c5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)) + 1.0e-5*s5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3))],

np.array([
[0.25*c1*s0*s2 - 0.27203*c1*s0 + 0.25*c2*s0*s1 - 0.11804*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) + c4*(c1*s0*s2 + c2*s0*s1)) + 1.0e-5*s3*s5*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.11804*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.27203*c0*s1 - 0.11804*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + c4*(-1.0*c0*c1*c2 + c0*s1*s2)) + 1.0e-5*s3*s5*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.11804*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.11804*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + c4*(-1.0*c0*c1*c2 + c0*s1*s2)) + 1.0e-5*s3*s5*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.11804*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 1.0e-5*c3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 0.11804*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*(c0*c1*s2 + c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), 1.0e-5*c5*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1))],
[  -0.25*c0*c1*s2 + 0.27203*c0*c1 - 0.25*c0*c2*s1 - 0.11804*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) + 1.0e-5*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*s4*(c0*c1*s2 + c0*c2*s1), -0.25*c1*c2*s0 - 0.11804*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + c4*(-1.0*c1*c2*s0 + s0*s1*s2)) + 0.25*s0*s1*s2 - 0.27203*s0*s1 + 1.0e-5*s3*s5*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.11804*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c1*c2*s0 - 0.11804*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + c4*(-1.0*c1*c2*s0 + s0*s1*s2)) + 0.25*s0*s1*s2 + 1.0e-5*s3*s5*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.11804*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 1.0e-5*c3*s5*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 0.11804*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*(c1*s0*s2 + c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 1.0e-5*c5*s3*(c1*c2*s0 - 1.0*s0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))],
[                                                                                                                                                                                                                                                            0,                                                             0.25*c1*s2 - 0.27203*c1 + 0.25*c2*s1 + 0.11804*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(c1*s2 + c2*s1)) - 1.0e-5*s3*s5*(c1*c2 - 1.0*s1*s2) + 0.11804*s4*(-1.0*c1*s2 - 1.0*c2*s1),                                                          0.25*c1*s2 + 0.25*c2*s1 + 0.11804*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(c1*s2 + c2*s1)) - 1.0e-5*s3*s5*(c1*c2 - 1.0*s1*s2) + 0.11804*s4*(-1.0*c1*s2 - 1.0*c2*s1),                              -1.0e-5*c3*s5*(c1*s2 + c2*s1) - 0.11804*c4*s3*(c1*s2 + c2*s1) + 1.0e-5*c5*s3*s4*(c1*s2 + c2*s1),                                     -0.11804*c3*s4*(c1*s2 + c2*s1) + 0.11804*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*c4*(c1*s2 + c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2)),                     -1.0e-5*c5*s3*(c1*s2 + c2*s1) + 1.0e-5*s5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2))],
[                                                                                                                                                                                                                                                            0,                                                                                                                                                                                                                                                                          0,                                                                                                                                                                                                                                                          0,                                                                                                                            0,                                                                                                                                                                     0,                                                                                                                             0]]), np.array([
[0.25*c1*s0*s2 + 0.25*c2*s0*s1 - 0.11804*c3*c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*c2*s0 + s0*s1*s2) + c4*(c1*s0*s2 + c2*s0*s1)) + 1.0e-5*s3*s5*(-1.0*c1*c2*s0 + s0*s1*s2) + 0.11804*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.11804*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + c4*(-1.0*c0*c1*c2 + c0*s1*s2)) + 1.0e-5*s3*s5*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.11804*s4*(c0*c1*c2 - 1.0*c0*s1*s2), -0.25*c0*c1*c2 + 0.25*c0*s1*s2 - 0.11804*c3*c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + c4*(-1.0*c0*c1*c2 + c0*s1*s2)) + 1.0e-5*s3*s5*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) + 0.11804*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 1.0e-5*c3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 0.11804*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*(c0*c1*s2 + c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), 1.0e-5*c5*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1))],
[  -0.25*c0*c1*s2 - 0.25*c0*c2*s1 - 0.11804*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) + 1.0e-5*s3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*s4*(c0*c1*s2 + c0*c2*s1), -0.25*c1*c2*s0 - 0.11804*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + c4*(-1.0*c1*c2*s0 + s0*s1*s2)) + 0.25*s0*s1*s2 + 1.0e-5*s3*s5*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.11804*s4*(c1*c2*s0 - 1.0*s0*s1*s2), -0.25*c1*c2*s0 - 0.11804*c3*c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + c4*(-1.0*c1*c2*s0 + s0*s1*s2)) + 0.25*s0*s1*s2 + 1.0e-5*s3*s5*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1) + 0.11804*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 1.0e-5*c3*s5*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 0.11804*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*(c1*s0*s2 + c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 1.0e-5*c5*s3*(c1*c2*s0 - 1.0*s0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))],
[                                                                                                                                                                                                                                            0,                                                          0.25*c1*s2 + 0.25*c2*s1 + 0.11804*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(c1*s2 + c2*s1)) - 1.0e-5*s3*s5*(c1*c2 - 1.0*s1*s2) + 0.11804*s4*(-1.0*c1*s2 - 1.0*c2*s1),                                                          0.25*c1*s2 + 0.25*c2*s1 + 0.11804*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(c1*s2 + c2*s1)) - 1.0e-5*s3*s5*(c1*c2 - 1.0*s1*s2) + 0.11804*s4*(-1.0*c1*s2 - 1.0*c2*s1),                              -1.0e-5*c3*s5*(c1*s2 + c2*s1) - 0.11804*c4*s3*(c1*s2 + c2*s1) + 1.0e-5*c5*s3*s4*(c1*s2 + c2*s1),                                     -0.11804*c3*s4*(c1*s2 + c2*s1) + 0.11804*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*c4*(c1*s2 + c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2)),                     -1.0e-5*c5*s3*(c1*s2 + c2*s1) + 1.0e-5*s5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2))],
np.array([
[                          0.11804*c4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*c5*s4*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*s5*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)), 1.0e-5*c3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2), 1.0e-5*c3*s5*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*s3*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0e-5*c5*s3*s4*(c0*c1*c2 - 1.0*c0*s1*s2),      0.11804*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0e-5*c5*s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0e-5*s5*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), -1.0e-5*c4*c5*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 0.11804*s4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)),  -1.0e-5*c5*(c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0*s0*s3) - 1.0e-5*s4*s5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1))],
[0.11804*c4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 1.0e-5*c5*s4*(-1.0*c3*s0 - 1.0*s3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)) - 1.0e-5*s5*(c3*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1) - 1.0*s0*s3), 1.0e-5*c3*s5*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 1.0e-5*c3*s5*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*s3*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*s3*s4*(c1*c2*s0 - 1.0*s0*s1*s2), 0.11804*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*c5*s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*s5*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)),           -1.0e-5*c4*c5*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 0.11804*s4*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), -1.0e-5*c5*(c0*s3 + c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0e-5*s4*s5*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1))],
[                                                                                                                                                                                              0,                              -1.0e-5*c3*s5*(c1*s2 + c2*s1) - 0.11804*c4*s3*(c1*s2 + c2*s1) + 1.0e-5*c5*s3*s4*(c1*s2 + c2*s1),                              -1.0e-5*c3*s5*(c1*s2 + c2*s1) - 0.11804*c4*s3*(c1*s2 + c2*s1) + 1.0e-5*c5*s3*s4*(c1*s2 + c2*s1),                                                        -0.11804*c3*c4*(-1.0*c1*c2 + s1*s2) + 1.0e-5*c3*c5*s4*(-1.0*c1*c2 + s1*s2) + 1.0e-5*s3*s5*(-1.0*c1*c2 + s1*s2),                                                            1.0e-5*c4*c5*s3*(-1.0*c1*c2 + s1*s2) + 0.11804*s3*s4*(-1.0*c1*c2 + s1*s2),                                          -1.0e-5*c3*c5*(-1.0*c1*c2 + s1*s2) + 1.0e-5*s3*s4*s5*(c1*c2 - 1.0*s1*s2)],
np.array([
[0.11804*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0e-5*c5*(c4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) - 1.0*s4*(-1.0*c1*c2*s0 + s0*s1*s2)) - 0.11804*s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 0.11804*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*(c0*c1*s2 + c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), 0.11804*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + 0.11804*c4*(c0*c1*s2 + c0*c2*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c0*c1*c2 - 1.0*c0*s1*s2) - 1.0*s4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), -1.0e-5*c4*c5*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)) - 0.11804*s4*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), 0.11804*c4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3) - 1.0e-5*c5*(c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3)) - 0.11804*s4*(-1.0*c0*c1*c2 + c0*s1*s2), 1.0e-5*s5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2))],
[                  0.11804*c4*(-1.0*c0*c1*c2 + c0*s1*s2) - 1.0e-5*c5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2)) - 0.11804*s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3), 0.11804*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*(c1*s0*s2 + c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 0.11804*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + 0.11804*c4*(c1*s0*s2 + c2*s0*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c1*c2*s0 - 1.0*s0*s1*s2) - 1.0*s4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)),           -1.0e-5*c4*c5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)) - 0.11804*s4*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)), 0.11804*c4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1)) - 1.0e-5*c5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) - 1.0*s4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1))) - 0.11804*s4*(-1.0*c1*c2*s0 + s0*s1*s2),      1.0e-5*s5*(c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2))],
[                                                                                                                                                                                                               0,                                     -0.11804*c3*s4*(c1*s2 + c2*s1) + 0.11804*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*c4*(c1*s2 + c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2)),                                     -0.11804*c3*s4*(c1*s2 + c2*s1) + 0.11804*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(c3*c4*(c1*s2 + c2*s1) - 1.0*s4*(-1.0*c1*c2 + s1*s2)),                                  1.0e-5*c4*c5*s3*(-1.0*c1*c2 + s1*s2) + 0.11804*s3*s4*(-1.0*c1*c2 + s1*s2),                                                    -0.11804*c3*c4*(-1.0*c1*c2 + s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*c2 + s1*s2) + c4*(c1*s2 + c2*s1)) - 0.11804*s4*(c1*s2 + c2*s1),                  1.0e-5*s5*(-1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1))],
[                                                                                                                                                                                                               0,                                                                                                                                                                     0,                                                                                                                                                                     0,                                                                                                          0,                                                                                                                                                                                      0,                                                                                             0]]), np.array([
[-1.0e-5*c5*(c0*c3 - 1.0*s3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)) + 1.0e-5*s5*(c4*(-1.0*c1*c2*s0 + s0*s1*s2) + s4*(-1.0*c0*s3 - 1.0*c3*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1))), 1.0e-5*c5*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), 1.0e-5*c5*s3*(c0*c1*c2 - 1.0*c0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c0*c1*c2 - 1.0*c0*s1*s2) + c4*(-1.0*c0*c1*s2 - 1.0*c0*c2*s1)), -1.0e-5*c5*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) + 1.0e-5*s4*s5*(-1.0*c3*s0 + s3*(c0*c1*s2 + c0*c2*s1)), 1.0e-5*s5*(c4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3) - 1.0*s4*(c0*c1*c2 - 1.0*c0*s1*s2)),           -1.0e-5*c5*(-1.0*c4*(c0*c1*c2 - 1.0*c0*s1*s2) + s4*(c3*(c0*c1*s2 + c0*c2*s1) + s0*s3)) + 1.0e-5*s5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1))],
[                   -1.0e-5*c5*(c3*s0 - 1.0*s3*(c0*c1*s2 + c0*c2*s1)) + 1.0e-5*s5*(c4*(c0*c1*c2 - 1.0*c0*s1*s2) + s4*(-1.0*c3*(c0*c1*s2 + c0*c2*s1) - 1.0*s0*s3)), 1.0e-5*c5*s3*(c1*c2*s0 - 1.0*s0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)), 1.0e-5*c5*s3*(c1*c2*s0 - 1.0*s0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c1*c2*s0 - 1.0*s0*s1*s2) + c4*(-1.0*c1*s0*s2 - 1.0*c2*s0*s1)),           -1.0e-5*c5*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) + 1.0e-5*s4*s5*(c0*c3 + s3*(c1*s0*s2 + c2*s0*s1)),      1.0e-5*s5*(c4*(c0*s3 - 1.0*c3*(c1*s0*s2 + c2*s0*s1)) - 1.0*s4*(c1*c2*s0 - 1.0*s0*s1*s2)), -1.0e-5*c5*(-1.0*c4*(c1*c2*s0 - 1.0*s0*s1*s2) + s4*(-1.0*c0*s3 + c3*(c1*s0*s2 + c2*s0*s1))) + 1.0e-5*s5*(-1.0*c0*c3 - 1.0*s3*(c1*s0*s2 + c2*s0*s1))],
[                                                                                                                                                               0,                                   -1.0e-5*c5*s3*(c1*s2 + c2*s1) + 1.0e-5*s5*(c3*s4*(c1*s2 + c2*s1) + c4*(-1.0*c1*c2 + s1*s2)),                                   -1.0e-5*c5*s3*(c1*s2 + c2*s1) + 1.0e-5*s5*(c3*s4*(c1*s2 + c2*s1) + c4*(-1.0*c1*c2 + s1*s2)),                                     -1.0e-5*c3*c5*(-1.0*c1*c2 + s1*s2) - 1.0e-5*s3*s4*s5*(-1.0*c1*c2 + s1*s2),                      1.0e-5*s5*(c3*c4*(-1.0*c1*c2 + s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1)),                                        -1.0e-5*c5*(c3*s4*(c1*c2 - 1.0*s1*s2) - 1.0*c4*(-1.0*c1*s2 - 1.0*c2*s1)) + 1.0e-5*s3*s5*(-1.0*c1*c2 + s1*s2)],

def get_dz_dq(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return np.array([[0, 0, 0, 0, 0, 0], [0, 0.02322*c1 - 0.14556*s1, 0, 0, 0, 0], [0, -0.04343*c1*c2 + 0.00169*c1*s2 + 0.00169*c2*s1 + 0.04343*s1*s2 - 0.27203*s1, -0.04343*c1*c2 + 0.00169*c1*s2 + 0.00169*c2*s1 + 0.04343*s1*s2, 0, 0, 0], [0, -0.19561*c1*c2 + 0.19561*s1*s2 - 0.27203*s1 - 0.00536*s3*(-1.0*c1*s2 - 1.0*c2*s1), -0.19561*c1*c2 + 0.19561*s1*s2 - 0.00536*s3*(-1.0*c1*s2 - 1.0*c2*s1), -0.00536*c3*(c1*c2 - 1.0*s1*s2), 0, 0], [0, -0.25*c1*c2 - 0.03277*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) + 3.0e-5*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) - 3.0e-5*c4*(-1.0*c1*c2 + s1*s2) + 0.25*s1*s2 - 0.27203*s1 - 0.00538*s3*(-1.0*c1*s2 - 1.0*c2*s1) - 0.03277*s4*(-1.0*c1*c2 + s1*s2), -0.25*c1*c2 - 0.03277*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) + 3.0e-5*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) - 3.0e-5*c4*(-1.0*c1*c2 + s1*s2) + 0.25*s1*s2 - 0.00538*s3*(-1.0*c1*s2 - 1.0*c2*s1) - 0.03277*s4*(-1.0*c1*c2 + s1*s2), -0.00538*c3*(c1*c2 - 1.0*s1*s2) + 0.03277*c4*s3*(c1*c2 - 1.0*s1*s2) - 3.0e-5*s3*s4*(c1*c2 - 1.0*s1*s2), 3.0e-5*c3*c4*(c1*c2 - 1.0*s1*s2) + 0.03277*c3*s4*(c1*c2 - 1.0*s1*s2) + 0.03277*c4*(c1*s2 + c2*s1) + 3.0e-5*s4*(-1.0*c1*s2 - 1.0*c2*s1), 0], [0, -0.25*c1*c2 - 0.11804*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2)) + 0.25*s1*s2 - 0.27203*s1 + 1.0e-5*s3*s5*(-1.0*c1*s2 - 1.0*c2*s1) - 0.11804*s4*(-1.0*c1*c2 + s1*s2), -0.25*c1*c2 - 0.11804*c3*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 1.0e-5*c5*(-1.0*c3*s4*(-1.0*c1*s2 - 1.0*c2*s1) + c4*(-1.0*c1*c2 + s1*s2)) + 0.25*s1*s2 + 1.0e-5*s3*s5*(-1.0*c1*s2 - 1.0*c2*s1) - 0.11804*s4*(-1.0*c1*c2 + s1*s2), 1.0e-5*c3*s5*(c1*c2 - 1.0*s1*s2) + 0.11804*c4*s3*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*s3*s4*(c1*c2 - 1.0*s1*s2), 0.11804*c3*s4*(c1*c2 - 1.0*s1*s2) + 0.11804*c4*(c1*s2 + c2*s1) - 1.0e-5*c5*(-1.0*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0*s4*(-1.0*c1*s2 - 1.0*c2*s1)), 1.0e-5*c5*s3*(c1*c2 - 1.0*s1*s2) + 1.0e-5*s5*(-1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1))]])
def get_M():
  return np.array([[0.953630000000000], [0.914160000000000], [1.53769000000000], [0.169590000000000], [0.718420000000000], [0.0140000000000000]])
def get_I():
  return [np.array([
[0.00132530668,   2.230762e-5,   -3.26473e-6],
[  2.230762e-5, 0.00038764478,   -9.44462e-6],
[  -3.26473e-6,   -9.44462e-6, 0.00133110268]]), np.array([
[ 0.00191710524, -0.00306368582, 0.00133907096],
[-0.00306368582,  0.02382556166,   1.417539e-5],
[ 0.00133907096,    1.417539e-5, 0.02385579838]]), np.array([
[ 0.00389376689, -0.00011254494,    2.651074e-5],
[-0.00011254494,  0.00099712162, -0.00068326125],
[   2.651074e-5, -0.00068326125,  0.00322811008]]), np.array([
[0.00063546784,           0.0,           0.0],
[          0.0, 0.00054153269,   5.360706e-5],
[          0.0,   5.360706e-5, 0.00012623114]]), np.array([
[0.00102093766,     -8.0209e-7,      1.3168e-7],
[   -8.0209e-7,  0.00024950659, -0.00012666862],
[    1.3168e-7, -0.00012666862,   0.0008645461]]), np.array([
[2.42419e-6,        0.0,   2.4e-10],
[       0.0, 2.42251e-6,       0.0],
[   2.4e-10,        0.0, 6.8202e-7]])]
def get_g():
  return 9.8
def get_vars(q):
  return  get_R(q), get_dR_dq(q), get_Kw(q), get_dKw_dq(q), get_J(q), get_dJ_dq(q), get_dz_dq(q), get_M(), get_I(), get_g()



def get_z(q):
  c0 = math.cos(q[0])
  s0 = math.sin(q[0])
  c1 = math.cos(q[1])
  s1 = math.sin(q[1])
  c2 = math.cos(q[2])
  s2 = math.sin(q[2])
  c3 = math.cos(q[3])
  s3 = math.sin(q[3])
  c4 = math.cos(q[4])
  s4 = math.sin(q[4])
  c5 = math.cos(q[5])
  s5 = math.sin(q[5])
  return np.array([[0.185200000000000], [0.14556*c1 + 0.02322*s1 + 0.184], [-0.00169*c1*c2 - 0.04343*c1*s2 + 0.27203*c1 - 0.04343*c2*s1 + 0.00169*s1*s2 + 0.184], [-0.19561*c1*s2 + 0.27203*c1 - 0.19561*c2*s1 - 0.00536*s3*(c1*c2 - 1.0*s1*s2) + 0.184], [-0.25*c1*s2 + 0.27203*c1 - 0.25*c2*s1 - 0.03277*c3*c4*(c1*c2 - 1.0*s1*s2) + 3.0e-5*c3*s4*(c1*c2 - 1.0*s1*s2) - 3.0e-5*c4*(-1.0*c1*s2 - 1.0*c2*s1) - 0.00538*s3*(c1*c2 - 1.0*s1*s2) - 0.03277*s4*(-1.0*c1*s2 - 1.0*c2*s1) + 0.184], [-0.25*c1*s2 + 0.27203*c1 - 0.25*c2*s1 - 0.11804*c3*c4*(c1*c2 - 1.0*s1*s2) - 1.0e-5*c5*(-1.0*c3*s4*(c1*c2 - 1.0*s1*s2) + c4*(-1.0*c1*s2 - 1.0*c2*s1)) + 1.0e-5*s3*s5*(c1*c2 - 1.0*s1*s2) - 0.11804*s4*(-1.0*c1*s2 - 1.0*c2*s1) + 0.184]])